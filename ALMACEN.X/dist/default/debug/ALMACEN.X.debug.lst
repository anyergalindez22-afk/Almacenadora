

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Oct 01 21:42:20 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 17/01/2025 GMT
    45                           ; 
    46                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000FE0                     bsr             equ	4064
    79   000FE9                     fsr0            equ	4073
    80   000FEA                     fsr0h           equ	4074
    81   000FE9                     fsr0l           equ	4073
    82   000FE1                     fsr1            equ	4065
    83   000FE2                     fsr1h           equ	4066
    84   000FE1                     fsr1l           equ	4065
    85   000FD9                     fsr2            equ	4057
    86   000FDA                     fsr2h           equ	4058
    87   000FD9                     fsr2l           equ	4057
    88   000FEF                     indf0           equ	4079
    89   000FE7                     indf1           equ	4071
    90   000FDF                     indf2           equ	4063
    91   000FF2                     intcon          equ	4082
    92   000000                     nvmcon          equ	0
    93   000FF9                     pcl             equ	4089
    94   000FFA                     pclath          equ	4090
    95   000FFB                     pclatu          equ	4091
    96   000FEB                     plusw0          equ	4075
    97   000FE3                     plusw1          equ	4067
    98   000FDB                     plusw2          equ	4059
    99   000FED                     postdec0        equ	4077
   100   000FE5                     postdec1        equ	4069
   101   000FDD                     postdec2        equ	4061
   102   000FEE                     postinc0        equ	4078
   103   000FE6                     postinc1        equ	4070
   104   000FDE                     postinc2        equ	4062
   105   000FEC                     preinc0         equ	4076
   106   000FE4                     preinc1         equ	4068
   107   000FDC                     preinc2         equ	4060
   108   000FF3                     prod            equ	4083
   109   000FF4                     prodh           equ	4084
   110   000FF3                     prodl           equ	4083
   111   000FD8                     status          equ	4056
   112   000FF5                     tablat          equ	4085
   113   000FF6                     tblptr          equ	4086
   114   000FF7                     tblptrh         equ	4087
   115   000FF6                     tblptrl         equ	4086
   116   000FF8                     tblptru         equ	4088
   117   000FFD                     tosl            equ	4093
   118   000FE8                     wreg            equ	4072
   119   000F62                     SPPDATA         equ	3938	;# 
   120   000F63                     SPPCFG          equ	3939	;# 
   121   000F64                     SPPEPS          equ	3940	;# 
   122   000F65                     SPPCON          equ	3941	;# 
   123   000F66                     UFRM            equ	3942	;# 
   124   000F66                     UFRML           equ	3942	;# 
   125   000F67                     UFRMH           equ	3943	;# 
   126   000F68                     UIR             equ	3944	;# 
   127   000F69                     UIE             equ	3945	;# 
   128   000F6A                     UEIR            equ	3946	;# 
   129   000F6B                     UEIE            equ	3947	;# 
   130   000F6C                     USTAT           equ	3948	;# 
   131   000F6D                     UCON            equ	3949	;# 
   132   000F6E                     UADDR           equ	3950	;# 
   133   000F6F                     UCFG            equ	3951	;# 
   134   000F70                     UEP0            equ	3952	;# 
   135   000F71                     UEP1            equ	3953	;# 
   136   000F72                     UEP2            equ	3954	;# 
   137   000F73                     UEP3            equ	3955	;# 
   138   000F74                     UEP4            equ	3956	;# 
   139   000F75                     UEP5            equ	3957	;# 
   140   000F76                     UEP6            equ	3958	;# 
   141   000F77                     UEP7            equ	3959	;# 
   142   000F78                     UEP8            equ	3960	;# 
   143   000F79                     UEP9            equ	3961	;# 
   144   000F7A                     UEP10           equ	3962	;# 
   145   000F7B                     UEP11           equ	3963	;# 
   146   000F7C                     UEP12           equ	3964	;# 
   147   000F7D                     UEP13           equ	3965	;# 
   148   000F7E                     UEP14           equ	3966	;# 
   149   000F7F                     UEP15           equ	3967	;# 
   150   000F80                     PORTA           equ	3968	;# 
   151   000F81                     PORTB           equ	3969	;# 
   152   000F82                     PORTC           equ	3970	;# 
   153   000F83                     PORTD           equ	3971	;# 
   154   000F84                     PORTE           equ	3972	;# 
   155   000F89                     LATA            equ	3977	;# 
   156   000F8A                     LATB            equ	3978	;# 
   157   000F8B                     LATC            equ	3979	;# 
   158   000F8C                     LATD            equ	3980	;# 
   159   000F8D                     LATE            equ	3981	;# 
   160   000F92                     TRISA           equ	3986	;# 
   161   000F92                     DDRA            equ	3986	;# 
   162   000F93                     TRISB           equ	3987	;# 
   163   000F93                     DDRB            equ	3987	;# 
   164   000F94                     TRISC           equ	3988	;# 
   165   000F94                     DDRC            equ	3988	;# 
   166   000F95                     TRISD           equ	3989	;# 
   167   000F95                     DDRD            equ	3989	;# 
   168   000F96                     TRISE           equ	3990	;# 
   169   000F96                     DDRE            equ	3990	;# 
   170   000F9B                     OSCTUNE         equ	3995	;# 
   171   000F9D                     PIE1            equ	3997	;# 
   172   000F9E                     PIR1            equ	3998	;# 
   173   000F9F                     IPR1            equ	3999	;# 
   174   000FA0                     PIE2            equ	4000	;# 
   175   000FA1                     PIR2            equ	4001	;# 
   176   000FA2                     IPR2            equ	4002	;# 
   177   000FA6                     EECON1          equ	4006	;# 
   178   000FA7                     EECON2          equ	4007	;# 
   179   000FA8                     EEDATA          equ	4008	;# 
   180   000FA9                     EEADR           equ	4009	;# 
   181   000FAB                     RCSTA           equ	4011	;# 
   182   000FAB                     RCSTA1          equ	4011	;# 
   183   000FAC                     TXSTA           equ	4012	;# 
   184   000FAC                     TXSTA1          equ	4012	;# 
   185   000FAD                     TXREG           equ	4013	;# 
   186   000FAD                     TXREG1          equ	4013	;# 
   187   000FAE                     RCREG           equ	4014	;# 
   188   000FAE                     RCREG1          equ	4014	;# 
   189   000FAF                     SPBRG           equ	4015	;# 
   190   000FAF                     SPBRG1          equ	4015	;# 
   191   000FB0                     SPBRGH          equ	4016	;# 
   192   000FB1                     T3CON           equ	4017	;# 
   193   000FB2                     TMR3            equ	4018	;# 
   194   000FB2                     TMR3L           equ	4018	;# 
   195   000FB3                     TMR3H           equ	4019	;# 
   196   000FB4                     CMCON           equ	4020	;# 
   197   000FB5                     CVRCON          equ	4021	;# 
   198   000FB6                     ECCP1AS         equ	4022	;# 
   199   000FB6                     CCP1AS          equ	4022	;# 
   200   000FB7                     ECCP1DEL        equ	4023	;# 
   201   000FB7                     CCP1DEL         equ	4023	;# 
   202   000FB8                     BAUDCON         equ	4024	;# 
   203   000FB8                     BAUDCTL         equ	4024	;# 
   204   000FBA                     CCP2CON         equ	4026	;# 
   205   000FBB                     CCPR2           equ	4027	;# 
   206   000FBB                     CCPR2L          equ	4027	;# 
   207   000FBC                     CCPR2H          equ	4028	;# 
   208   000FBD                     CCP1CON         equ	4029	;# 
   209   000FBD                     ECCP1CON        equ	4029	;# 
   210   000FBE                     CCPR1           equ	4030	;# 
   211   000FBE                     CCPR1L          equ	4030	;# 
   212   000FBF                     CCPR1H          equ	4031	;# 
   213   000FC0                     ADCON2          equ	4032	;# 
   214   000FC1                     ADCON1          equ	4033	;# 
   215   000FC2                     ADCON0          equ	4034	;# 
   216   000FC3                     ADRES           equ	4035	;# 
   217   000FC3                     ADRESL          equ	4035	;# 
   218   000FC4                     ADRESH          equ	4036	;# 
   219   000FC5                     SSPCON2         equ	4037	;# 
   220   000FC6                     SSPCON1         equ	4038	;# 
   221   000FC7                     SSPSTAT         equ	4039	;# 
   222   000FC8                     SSPADD          equ	4040	;# 
   223   000FC9                     SSPBUF          equ	4041	;# 
   224   000FCA                     T2CON           equ	4042	;# 
   225   000FCB                     PR2             equ	4043	;# 
   226   000FCB                     MEMCON          equ	4043	;# 
   227   000FCC                     TMR2            equ	4044	;# 
   228   000FCD                     T1CON           equ	4045	;# 
   229   000FCE                     TMR1            equ	4046	;# 
   230   000FCE                     TMR1L           equ	4046	;# 
   231   000FCF                     TMR1H           equ	4047	;# 
   232   000FD0                     RCON            equ	4048	;# 
   233   000FD1                     WDTCON          equ	4049	;# 
   234   000FD2                     HLVDCON         equ	4050	;# 
   235   000FD2                     LVDCON          equ	4050	;# 
   236   000FD3                     OSCCON          equ	4051	;# 
   237   000FD5                     T0CON           equ	4053	;# 
   238   000FD6                     TMR0            equ	4054	;# 
   239   000FD6                     TMR0L           equ	4054	;# 
   240   000FD7                     TMR0H           equ	4055	;# 
   241   000FD8                     STATUS          equ	4056	;# 
   242   000FD9                     FSR2            equ	4057	;# 
   243   000FD9                     FSR2L           equ	4057	;# 
   244   000FDA                     FSR2H           equ	4058	;# 
   245   000FDB                     PLUSW2          equ	4059	;# 
   246   000FDC                     PREINC2         equ	4060	;# 
   247   000FDD                     POSTDEC2        equ	4061	;# 
   248   000FDE                     POSTINC2        equ	4062	;# 
   249   000FDF                     INDF2           equ	4063	;# 
   250   000FE0                     BSR             equ	4064	;# 
   251   000FE1                     FSR1            equ	4065	;# 
   252   000FE1                     FSR1L           equ	4065	;# 
   253   000FE2                     FSR1H           equ	4066	;# 
   254   000FE3                     PLUSW1          equ	4067	;# 
   255   000FE4                     PREINC1         equ	4068	;# 
   256   000FE5                     POSTDEC1        equ	4069	;# 
   257   000FE6                     POSTINC1        equ	4070	;# 
   258   000FE7                     INDF1           equ	4071	;# 
   259   000FE8                     WREG            equ	4072	;# 
   260   000FE9                     FSR0            equ	4073	;# 
   261   000FE9                     FSR0L           equ	4073	;# 
   262   000FEA                     FSR0H           equ	4074	;# 
   263   000FEB                     PLUSW0          equ	4075	;# 
   264   000FEC                     PREINC0         equ	4076	;# 
   265   000FED                     POSTDEC0        equ	4077	;# 
   266   000FEE                     POSTINC0        equ	4078	;# 
   267   000FEF                     INDF0           equ	4079	;# 
   268   000FF0                     INTCON3         equ	4080	;# 
   269   000FF1                     INTCON2         equ	4081	;# 
   270   000FF2                     INTCON          equ	4082	;# 
   271   000FF3                     PROD            equ	4083	;# 
   272   000FF3                     PRODL           equ	4083	;# 
   273   000FF4                     PRODH           equ	4084	;# 
   274   000FF5                     TABLAT          equ	4085	;# 
   275   000FF6                     TBLPTR          equ	4086	;# 
   276   000FF6                     TBLPTRL         equ	4086	;# 
   277   000FF7                     TBLPTRH         equ	4087	;# 
   278   000FF8                     TBLPTRU         equ	4088	;# 
   279   000FF9                     PCLAT           equ	4089	;# 
   280   000FF9                     PC              equ	4089	;# 
   281   000FF9                     PCL             equ	4089	;# 
   282   000FFA                     PCLATH          equ	4090	;# 
   283   000FFB                     PCLATU          equ	4091	;# 
   284   000FFC                     STKPTR          equ	4092	;# 
   285   000FFD                     TOS             equ	4093	;# 
   286   000FFD                     TOSL            equ	4093	;# 
   287   000FFE                     TOSH            equ	4094	;# 
   288   000FFF                     TOSU            equ	4095	;# 
   289   000F62                     SPPDATA         equ	3938	;# 
   290   000F63                     SPPCFG          equ	3939	;# 
   291   000F64                     SPPEPS          equ	3940	;# 
   292   000F65                     SPPCON          equ	3941	;# 
   293   000F66                     UFRM            equ	3942	;# 
   294   000F66                     UFRML           equ	3942	;# 
   295   000F67                     UFRMH           equ	3943	;# 
   296   000F68                     UIR             equ	3944	;# 
   297   000F69                     UIE             equ	3945	;# 
   298   000F6A                     UEIR            equ	3946	;# 
   299   000F6B                     UEIE            equ	3947	;# 
   300   000F6C                     USTAT           equ	3948	;# 
   301   000F6D                     UCON            equ	3949	;# 
   302   000F6E                     UADDR           equ	3950	;# 
   303   000F6F                     UCFG            equ	3951	;# 
   304   000F70                     UEP0            equ	3952	;# 
   305   000F71                     UEP1            equ	3953	;# 
   306   000F72                     UEP2            equ	3954	;# 
   307   000F73                     UEP3            equ	3955	;# 
   308   000F74                     UEP4            equ	3956	;# 
   309   000F75                     UEP5            equ	3957	;# 
   310   000F76                     UEP6            equ	3958	;# 
   311   000F77                     UEP7            equ	3959	;# 
   312   000F78                     UEP8            equ	3960	;# 
   313   000F79                     UEP9            equ	3961	;# 
   314   000F7A                     UEP10           equ	3962	;# 
   315   000F7B                     UEP11           equ	3963	;# 
   316   000F7C                     UEP12           equ	3964	;# 
   317   000F7D                     UEP13           equ	3965	;# 
   318   000F7E                     UEP14           equ	3966	;# 
   319   000F7F                     UEP15           equ	3967	;# 
   320   000F80                     PORTA           equ	3968	;# 
   321   000F81                     PORTB           equ	3969	;# 
   322   000F82                     PORTC           equ	3970	;# 
   323   000F83                     PORTD           equ	3971	;# 
   324   000F84                     PORTE           equ	3972	;# 
   325   000F89                     LATA            equ	3977	;# 
   326   000F8A                     LATB            equ	3978	;# 
   327   000F8B                     LATC            equ	3979	;# 
   328   000F8C                     LATD            equ	3980	;# 
   329   000F8D                     LATE            equ	3981	;# 
   330   000F92                     TRISA           equ	3986	;# 
   331   000F92                     DDRA            equ	3986	;# 
   332   000F93                     TRISB           equ	3987	;# 
   333   000F93                     DDRB            equ	3987	;# 
   334   000F94                     TRISC           equ	3988	;# 
   335   000F94                     DDRC            equ	3988	;# 
   336   000F95                     TRISD           equ	3989	;# 
   337   000F95                     DDRD            equ	3989	;# 
   338   000F96                     TRISE           equ	3990	;# 
   339   000F96                     DDRE            equ	3990	;# 
   340   000F9B                     OSCTUNE         equ	3995	;# 
   341   000F9D                     PIE1            equ	3997	;# 
   342   000F9E                     PIR1            equ	3998	;# 
   343   000F9F                     IPR1            equ	3999	;# 
   344   000FA0                     PIE2            equ	4000	;# 
   345   000FA1                     PIR2            equ	4001	;# 
   346   000FA2                     IPR2            equ	4002	;# 
   347   000FA6                     EECON1          equ	4006	;# 
   348   000FA7                     EECON2          equ	4007	;# 
   349   000FA8                     EEDATA          equ	4008	;# 
   350   000FA9                     EEADR           equ	4009	;# 
   351   000FAB                     RCSTA           equ	4011	;# 
   352   000FAB                     RCSTA1          equ	4011	;# 
   353   000FAC                     TXSTA           equ	4012	;# 
   354   000FAC                     TXSTA1          equ	4012	;# 
   355   000FAD                     TXREG           equ	4013	;# 
   356   000FAD                     TXREG1          equ	4013	;# 
   357   000FAE                     RCREG           equ	4014	;# 
   358   000FAE                     RCREG1          equ	4014	;# 
   359   000FAF                     SPBRG           equ	4015	;# 
   360   000FAF                     SPBRG1          equ	4015	;# 
   361   000FB0                     SPBRGH          equ	4016	;# 
   362   000FB1                     T3CON           equ	4017	;# 
   363   000FB2                     TMR3            equ	4018	;# 
   364   000FB2                     TMR3L           equ	4018	;# 
   365   000FB3                     TMR3H           equ	4019	;# 
   366   000FB4                     CMCON           equ	4020	;# 
   367   000FB5                     CVRCON          equ	4021	;# 
   368   000FB6                     ECCP1AS         equ	4022	;# 
   369   000FB6                     CCP1AS          equ	4022	;# 
   370   000FB7                     ECCP1DEL        equ	4023	;# 
   371   000FB7                     CCP1DEL         equ	4023	;# 
   372   000FB8                     BAUDCON         equ	4024	;# 
   373   000FB8                     BAUDCTL         equ	4024	;# 
   374   000FBA                     CCP2CON         equ	4026	;# 
   375   000FBB                     CCPR2           equ	4027	;# 
   376   000FBB                     CCPR2L          equ	4027	;# 
   377   000FBC                     CCPR2H          equ	4028	;# 
   378   000FBD                     CCP1CON         equ	4029	;# 
   379   000FBD                     ECCP1CON        equ	4029	;# 
   380   000FBE                     CCPR1           equ	4030	;# 
   381   000FBE                     CCPR1L          equ	4030	;# 
   382   000FBF                     CCPR1H          equ	4031	;# 
   383   000FC0                     ADCON2          equ	4032	;# 
   384   000FC1                     ADCON1          equ	4033	;# 
   385   000FC2                     ADCON0          equ	4034	;# 
   386   000FC3                     ADRES           equ	4035	;# 
   387   000FC3                     ADRESL          equ	4035	;# 
   388   000FC4                     ADRESH          equ	4036	;# 
   389   000FC5                     SSPCON2         equ	4037	;# 
   390   000FC6                     SSPCON1         equ	4038	;# 
   391   000FC7                     SSPSTAT         equ	4039	;# 
   392   000FC8                     SSPADD          equ	4040	;# 
   393   000FC9                     SSPBUF          equ	4041	;# 
   394   000FCA                     T2CON           equ	4042	;# 
   395   000FCB                     PR2             equ	4043	;# 
   396   000FCB                     MEMCON          equ	4043	;# 
   397   000FCC                     TMR2            equ	4044	;# 
   398   000FCD                     T1CON           equ	4045	;# 
   399   000FCE                     TMR1            equ	4046	;# 
   400   000FCE                     TMR1L           equ	4046	;# 
   401   000FCF                     TMR1H           equ	4047	;# 
   402   000FD0                     RCON            equ	4048	;# 
   403   000FD1                     WDTCON          equ	4049	;# 
   404   000FD2                     HLVDCON         equ	4050	;# 
   405   000FD2                     LVDCON          equ	4050	;# 
   406   000FD3                     OSCCON          equ	4051	;# 
   407   000FD5                     T0CON           equ	4053	;# 
   408   000FD6                     TMR0            equ	4054	;# 
   409   000FD6                     TMR0L           equ	4054	;# 
   410   000FD7                     TMR0H           equ	4055	;# 
   411   000FD8                     STATUS          equ	4056	;# 
   412   000FD9                     FSR2            equ	4057	;# 
   413   000FD9                     FSR2L           equ	4057	;# 
   414   000FDA                     FSR2H           equ	4058	;# 
   415   000FDB                     PLUSW2          equ	4059	;# 
   416   000FDC                     PREINC2         equ	4060	;# 
   417   000FDD                     POSTDEC2        equ	4061	;# 
   418   000FDE                     POSTINC2        equ	4062	;# 
   419   000FDF                     INDF2           equ	4063	;# 
   420   000FE0                     BSR             equ	4064	;# 
   421   000FE1                     FSR1            equ	4065	;# 
   422   000FE1                     FSR1L           equ	4065	;# 
   423   000FE2                     FSR1H           equ	4066	;# 
   424   000FE3                     PLUSW1          equ	4067	;# 
   425   000FE4                     PREINC1         equ	4068	;# 
   426   000FE5                     POSTDEC1        equ	4069	;# 
   427   000FE6                     POSTINC1        equ	4070	;# 
   428   000FE7                     INDF1           equ	4071	;# 
   429   000FE8                     WREG            equ	4072	;# 
   430   000FE9                     FSR0            equ	4073	;# 
   431   000FE9                     FSR0L           equ	4073	;# 
   432   000FEA                     FSR0H           equ	4074	;# 
   433   000FEB                     PLUSW0          equ	4075	;# 
   434   000FEC                     PREINC0         equ	4076	;# 
   435   000FED                     POSTDEC0        equ	4077	;# 
   436   000FEE                     POSTINC0        equ	4078	;# 
   437   000FEF                     INDF0           equ	4079	;# 
   438   000FF0                     INTCON3         equ	4080	;# 
   439   000FF1                     INTCON2         equ	4081	;# 
   440   000FF2                     INTCON          equ	4082	;# 
   441   000FF3                     PROD            equ	4083	;# 
   442   000FF3                     PRODL           equ	4083	;# 
   443   000FF4                     PRODH           equ	4084	;# 
   444   000FF5                     TABLAT          equ	4085	;# 
   445   000FF6                     TBLPTR          equ	4086	;# 
   446   000FF6                     TBLPTRL         equ	4086	;# 
   447   000FF7                     TBLPTRH         equ	4087	;# 
   448   000FF8                     TBLPTRU         equ	4088	;# 
   449   000FF9                     PCLAT           equ	4089	;# 
   450   000FF9                     PC              equ	4089	;# 
   451   000FF9                     PCL             equ	4089	;# 
   452   000FFA                     PCLATH          equ	4090	;# 
   453   000FFB                     PCLATU          equ	4091	;# 
   454   000FFC                     STKPTR          equ	4092	;# 
   455   000FFD                     TOS             equ	4093	;# 
   456   000FFD                     TOSL            equ	4093	;# 
   457   000FFE                     TOSH            equ	4094	;# 
   458   000FFF                     TOSU            equ	4095	;# 
   459   000F62                     SPPDATA         equ	3938	;# 
   460   000F63                     SPPCFG          equ	3939	;# 
   461   000F64                     SPPEPS          equ	3940	;# 
   462   000F65                     SPPCON          equ	3941	;# 
   463   000F66                     UFRM            equ	3942	;# 
   464   000F66                     UFRML           equ	3942	;# 
   465   000F67                     UFRMH           equ	3943	;# 
   466   000F68                     UIR             equ	3944	;# 
   467   000F69                     UIE             equ	3945	;# 
   468   000F6A                     UEIR            equ	3946	;# 
   469   000F6B                     UEIE            equ	3947	;# 
   470   000F6C                     USTAT           equ	3948	;# 
   471   000F6D                     UCON            equ	3949	;# 
   472   000F6E                     UADDR           equ	3950	;# 
   473   000F6F                     UCFG            equ	3951	;# 
   474   000F70                     UEP0            equ	3952	;# 
   475   000F71                     UEP1            equ	3953	;# 
   476   000F72                     UEP2            equ	3954	;# 
   477   000F73                     UEP3            equ	3955	;# 
   478   000F74                     UEP4            equ	3956	;# 
   479   000F75                     UEP5            equ	3957	;# 
   480   000F76                     UEP6            equ	3958	;# 
   481   000F77                     UEP7            equ	3959	;# 
   482   000F78                     UEP8            equ	3960	;# 
   483   000F79                     UEP9            equ	3961	;# 
   484   000F7A                     UEP10           equ	3962	;# 
   485   000F7B                     UEP11           equ	3963	;# 
   486   000F7C                     UEP12           equ	3964	;# 
   487   000F7D                     UEP13           equ	3965	;# 
   488   000F7E                     UEP14           equ	3966	;# 
   489   000F7F                     UEP15           equ	3967	;# 
   490   000F80                     PORTA           equ	3968	;# 
   491   000F81                     PORTB           equ	3969	;# 
   492   000F82                     PORTC           equ	3970	;# 
   493   000F83                     PORTD           equ	3971	;# 
   494   000F84                     PORTE           equ	3972	;# 
   495   000F89                     LATA            equ	3977	;# 
   496   000F8A                     LATB            equ	3978	;# 
   497   000F8B                     LATC            equ	3979	;# 
   498   000F8C                     LATD            equ	3980	;# 
   499   000F8D                     LATE            equ	3981	;# 
   500   000F92                     TRISA           equ	3986	;# 
   501   000F92                     DDRA            equ	3986	;# 
   502   000F93                     TRISB           equ	3987	;# 
   503   000F93                     DDRB            equ	3987	;# 
   504   000F94                     TRISC           equ	3988	;# 
   505   000F94                     DDRC            equ	3988	;# 
   506   000F95                     TRISD           equ	3989	;# 
   507   000F95                     DDRD            equ	3989	;# 
   508   000F96                     TRISE           equ	3990	;# 
   509   000F96                     DDRE            equ	3990	;# 
   510   000F9B                     OSCTUNE         equ	3995	;# 
   511   000F9D                     PIE1            equ	3997	;# 
   512   000F9E                     PIR1            equ	3998	;# 
   513   000F9F                     IPR1            equ	3999	;# 
   514   000FA0                     PIE2            equ	4000	;# 
   515   000FA1                     PIR2            equ	4001	;# 
   516   000FA2                     IPR2            equ	4002	;# 
   517   000FA6                     EECON1          equ	4006	;# 
   518   000FA7                     EECON2          equ	4007	;# 
   519   000FA8                     EEDATA          equ	4008	;# 
   520   000FA9                     EEADR           equ	4009	;# 
   521   000FAB                     RCSTA           equ	4011	;# 
   522   000FAB                     RCSTA1          equ	4011	;# 
   523   000FAC                     TXSTA           equ	4012	;# 
   524   000FAC                     TXSTA1          equ	4012	;# 
   525   000FAD                     TXREG           equ	4013	;# 
   526   000FAD                     TXREG1          equ	4013	;# 
   527   000FAE                     RCREG           equ	4014	;# 
   528   000FAE                     RCREG1          equ	4014	;# 
   529   000FAF                     SPBRG           equ	4015	;# 
   530   000FAF                     SPBRG1          equ	4015	;# 
   531   000FB0                     SPBRGH          equ	4016	;# 
   532   000FB1                     T3CON           equ	4017	;# 
   533   000FB2                     TMR3            equ	4018	;# 
   534   000FB2                     TMR3L           equ	4018	;# 
   535   000FB3                     TMR3H           equ	4019	;# 
   536   000FB4                     CMCON           equ	4020	;# 
   537   000FB5                     CVRCON          equ	4021	;# 
   538   000FB6                     ECCP1AS         equ	4022	;# 
   539   000FB6                     CCP1AS          equ	4022	;# 
   540   000FB7                     ECCP1DEL        equ	4023	;# 
   541   000FB7                     CCP1DEL         equ	4023	;# 
   542   000FB8                     BAUDCON         equ	4024	;# 
   543   000FB8                     BAUDCTL         equ	4024	;# 
   544   000FBA                     CCP2CON         equ	4026	;# 
   545   000FBB                     CCPR2           equ	4027	;# 
   546   000FBB                     CCPR2L          equ	4027	;# 
   547   000FBC                     CCPR2H          equ	4028	;# 
   548   000FBD                     CCP1CON         equ	4029	;# 
   549   000FBD                     ECCP1CON        equ	4029	;# 
   550   000FBE                     CCPR1           equ	4030	;# 
   551   000FBE                     CCPR1L          equ	4030	;# 
   552   000FBF                     CCPR1H          equ	4031	;# 
   553   000FC0                     ADCON2          equ	4032	;# 
   554   000FC1                     ADCON1          equ	4033	;# 
   555   000FC2                     ADCON0          equ	4034	;# 
   556   000FC3                     ADRES           equ	4035	;# 
   557   000FC3                     ADRESL          equ	4035	;# 
   558   000FC4                     ADRESH          equ	4036	;# 
   559   000FC5                     SSPCON2         equ	4037	;# 
   560   000FC6                     SSPCON1         equ	4038	;# 
   561   000FC7                     SSPSTAT         equ	4039	;# 
   562   000FC8                     SSPADD          equ	4040	;# 
   563   000FC9                     SSPBUF          equ	4041	;# 
   564   000FCA                     T2CON           equ	4042	;# 
   565   000FCB                     PR2             equ	4043	;# 
   566   000FCB                     MEMCON          equ	4043	;# 
   567   000FCC                     TMR2            equ	4044	;# 
   568   000FCD                     T1CON           equ	4045	;# 
   569   000FCE                     TMR1            equ	4046	;# 
   570   000FCE                     TMR1L           equ	4046	;# 
   571   000FCF                     TMR1H           equ	4047	;# 
   572   000FD0                     RCON            equ	4048	;# 
   573   000FD1                     WDTCON          equ	4049	;# 
   574   000FD2                     HLVDCON         equ	4050	;# 
   575   000FD2                     LVDCON          equ	4050	;# 
   576   000FD3                     OSCCON          equ	4051	;# 
   577   000FD5                     T0CON           equ	4053	;# 
   578   000FD6                     TMR0            equ	4054	;# 
   579   000FD6                     TMR0L           equ	4054	;# 
   580   000FD7                     TMR0H           equ	4055	;# 
   581   000FD8                     STATUS          equ	4056	;# 
   582   000FD9                     FSR2            equ	4057	;# 
   583   000FD9                     FSR2L           equ	4057	;# 
   584   000FDA                     FSR2H           equ	4058	;# 
   585   000FDB                     PLUSW2          equ	4059	;# 
   586   000FDC                     PREINC2         equ	4060	;# 
   587   000FDD                     POSTDEC2        equ	4061	;# 
   588   000FDE                     POSTINC2        equ	4062	;# 
   589   000FDF                     INDF2           equ	4063	;# 
   590   000FE0                     BSR             equ	4064	;# 
   591   000FE1                     FSR1            equ	4065	;# 
   592   000FE1                     FSR1L           equ	4065	;# 
   593   000FE2                     FSR1H           equ	4066	;# 
   594   000FE3                     PLUSW1          equ	4067	;# 
   595   000FE4                     PREINC1         equ	4068	;# 
   596   000FE5                     POSTDEC1        equ	4069	;# 
   597   000FE6                     POSTINC1        equ	4070	;# 
   598   000FE7                     INDF1           equ	4071	;# 
   599   000FE8                     WREG            equ	4072	;# 
   600   000FE9                     FSR0            equ	4073	;# 
   601   000FE9                     FSR0L           equ	4073	;# 
   602   000FEA                     FSR0H           equ	4074	;# 
   603   000FEB                     PLUSW0          equ	4075	;# 
   604   000FEC                     PREINC0         equ	4076	;# 
   605   000FED                     POSTDEC0        equ	4077	;# 
   606   000FEE                     POSTINC0        equ	4078	;# 
   607   000FEF                     INDF0           equ	4079	;# 
   608   000FF0                     INTCON3         equ	4080	;# 
   609   000FF1                     INTCON2         equ	4081	;# 
   610   000FF2                     INTCON          equ	4082	;# 
   611   000FF3                     PROD            equ	4083	;# 
   612   000FF3                     PRODL           equ	4083	;# 
   613   000FF4                     PRODH           equ	4084	;# 
   614   000FF5                     TABLAT          equ	4085	;# 
   615   000FF6                     TBLPTR          equ	4086	;# 
   616   000FF6                     TBLPTRL         equ	4086	;# 
   617   000FF7                     TBLPTRH         equ	4087	;# 
   618   000FF8                     TBLPTRU         equ	4088	;# 
   619   000FF9                     PCLAT           equ	4089	;# 
   620   000FF9                     PC              equ	4089	;# 
   621   000FF9                     PCL             equ	4089	;# 
   622   000FFA                     PCLATH          equ	4090	;# 
   623   000FFB                     PCLATU          equ	4091	;# 
   624   000FFC                     STKPTR          equ	4092	;# 
   625   000FFD                     TOS             equ	4093	;# 
   626   000FFD                     TOSL            equ	4093	;# 
   627   000FFE                     TOSH            equ	4094	;# 
   628   000FFF                     TOSU            equ	4095	;# 
   629                           
   630                           	psect	smallconst
   631   000800                     __psmallconst:
   632                           	callstack 0
   633   000800  00                 	db	0
   634   000801                     _figura_2:
   635                           	callstack 0
   636   000801  1B                 	db	27
   637   000802  11                 	db	17
   638   000803  1F                 	db	31
   639   000804  1F                 	db	31
   640   000805  1F                 	db	31
   641   000806  11                 	db	17
   642   000807  1B                 	db	27
   643   000808  00                 	db	0
   644   000809                     __end_of_figura_2:
   645                           	callstack 0
   646   000809                     _figura_1:
   647                           	callstack 0
   648   000809  1B                 	db	27
   649   00080A  11                 	db	17
   650   00080B  11                 	db	17
   651   00080C  11                 	db	17
   652   00080D  11                 	db	17
   653   00080E  11                 	db	17
   654   00080F  1B                 	db	27
   655   000810  1F                 	db	31
   656   000811                     __end_of_figura_1:
   657                           	callstack 0
   658   000FA1                     _PIR2bits       set	4001
   659   000FA7                     _EECON2         set	4007
   660   000FA6                     _EECON1bits     set	4006
   661   000FA8                     _EEDATA         set	4008
   662   000FA9                     _EEADR          set	4009
   663   000F95                     _TRISDbits      set	3989
   664   000F8D                     _LATEbits       set	3981
   665   000F8B                     _LATCbits       set	3979
   666   000F81                     _PORTBbits      set	3969
   667   000F81                     _PORTB          set	3969
   668   000FD5                     _T0CONbits      set	4053
   669   000FD6                     _TMR0L          set	4054
   670   000F82                     _PORTCbits      set	3970
   671   000F8C                     _LATDbits       set	3980
   672   000F80                     _PORTAbits      set	3968
   673   000FF2                     _INTCON         set	4082
   674   000FD5                     _T0CON          set	4053
   675   000FF1                     _INTCON2bits    set	4081
   676   000FF2                     _INTCONbits     set	4082
   677   000FD0                     _RCONbits       set	4048
   678   000F8D                     _LATE           set	3981
   679   000F8C                     _LATD           set	3980
   680   000F8B                     _LATC           set	3979
   681   000F8A                     _LATB           set	3978
   682   000F89                     _LATA           set	3977
   683   000F94                     _TRISCbits      set	3988
   684   000F94                     _TRISC          set	3988
   685   000F96                     _TRISE          set	3990
   686   000F95                     _TRISD          set	3989
   687   000F92                     _TRISA          set	3986
   688   000F93                     _TRISB          set	3987
   689   000FC1                     _ADCON1bits     set	4033
   690   000811                     STR_2:
   691   000811  42                 	db	66	;'B'
   692   000812  4C                 	db	76	;'L'
   693   000813  41                 	db	65	;'A'
   694   000814  4E                 	db	78	;'N'
   695   000815  43                 	db	67	;'C'
   696   000816  41                 	db	65	;'A'
   697   000817  53                 	db	83	;'S'
   698   000818  00                 	db	0
   699   000819                     STR_1:
   700   000819  4E                 	db	78	;'N'
   701   00081A  45                 	db	69	;'E'
   702   00081B  47                 	db	71	;'G'
   703   00081C  52                 	db	82	;'R'
   704   00081D  41                 	db	65	;'A'
   705   00081E  53                 	db	83	;'S'
   706   00081F  00                 	db	0
   707   000820                     STR_3:
   708   000820  4D                 	db	77	;'M'
   709   000821  45                 	db	69	;'E'
   710   000822  54                 	db	84	;'T'
   711   000823  41                 	db	65	;'A'
   712   000824  4C                 	db	76	;'L'
   713   000825  00                 	db	0
   714   000826  00                 	db	0	; dummy byte at the end
   715   000800                     __smallconst    set	__psmallconst
   716   000800                     __mediumconst   set	__psmallconst
   717   000002                     __activetblptr  equ	2
   718                           
   719                           ; #config settings
   720                           
   721                           	psect	cinit
   722   001294                     __pcinit:
   723                           	callstack 0
   724   001294                     start_initialization:
   725                           	callstack 0
   726   001294                     __initialization:
   727                           	callstack 0
   728                           
   729                           ; Clear objects allocated to COMRAM (17 bytes)
   730   001294  EE00  F01E         	lfsr	0,__pbssCOMRAM
   731   001298  0E11               	movlw	17
   732   00129A                     clear_0:
   733   00129A  6AEE               	clrf	postinc0,c
   734   00129C  06E8               	decf	wreg,f,c
   735   00129E  E1FD               	bnz	clear_0
   736   0012A0                     end_of_initialization:
   737                           	callstack 0
   738   0012A0                     __end_of__initialization:
   739                           	callstack 0
   740   0012A0  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   741   0012A2  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   742   0012A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   743   0012A6  6EF8               	movwf	tblptru,c
   744   0012A8  0100               	movlb	0
   745   0012AA  EF08  F005         	goto	_main	;jump to C main() function
   746                           
   747                           	psect	bssCOMRAM
   748   00001E                     __pbssCOMRAM:
   749                           	callstack 0
   750   00001E                     _Fila3:
   751                           	callstack 0
   752   00001E                     	ds	4
   753   000022                     _Fila2:
   754                           	callstack 0
   755   000022                     	ds	4
   756   000026                     _Fila1:
   757                           	callstack 0
   758   000026                     	ds	4
   759   00002A                     _c:
   760                           	callstack 0
   761   00002A                     	ds	1
   762   00002B                     _f:
   763                           	callstack 0
   764   00002B                     	ds	1
   765   00002C                     _NEGRA:
   766                           	callstack 0
   767   00002C                     	ds	1
   768   00002D                     _BLANCA:
   769                           	callstack 0
   770   00002D                     	ds	1
   771   00002E                     _METAL:
   772                           	callstack 0
   773   00002E                     	ds	1
   774                           
   775                           	psect	cstackCOMRAM
   776   000001                     __pcstackCOMRAM:
   777                           	callstack 0
   778   000001                     i1Lcd_Port@a:
   779                           	callstack 0
   780   000001                     
   781                           ; 1 bytes @ 0x0
   782   000001                     	ds	1
   783   000002                     ??i1_Lcd_Cmd:
   784                           
   785                           ; 1 bytes @ 0x1
   786   000002                     	ds	1
   787   000003                     i1Lcd_Cmd@a:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x2
   791   000003                     	ds	1
   792   000004                     i1Lcd_Set_Cursor@b:
   793                           	callstack 0
   794   000004                     
   795                           ; 1 bytes @ 0x3
   796   000004                     	ds	1
   797   000005                     i1Lcd_Set_Cursor@a:
   798                           	callstack 0
   799   000005                     
   800                           ; 1 bytes @ 0x4
   801   000005                     	ds	1
   802   000006                     i1Lcd_Set_Cursor@z:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x5
   806   000006                     	ds	1
   807   000007                     i1Lcd_Set_Cursor@y:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x6
   811   000007                     	ds	1
   812   000008                     i1Lcd_Set_Cursor@temp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x7
   816   000008                     	ds	1
   817   000009                     ??_LowISR:
   818                           
   819                           ; 1 bytes @ 0x8
   820   000009                     	ds	3
   821   00000C                     LowISR@dummy:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0xB
   825   00000C                     	ds	1
   826   00000D                     Lcd_Port@a:
   827                           	callstack 0
   828   00000D                     EEPROM_Write@data:
   829                           	callstack 0
   830   00000D                     EEPROM_Read@dir:
   831                           	callstack 0
   832   00000D                     
   833                           ; 1 bytes @ 0xC
   834   00000D                     	ds	1
   835   00000E                     estado@i:
   836                           	callstack 0
   837   00000E                     Lcd_Write_Char@temp:
   838                           	callstack 0
   839   00000E                     EEPROM_Write@dir:
   840                           	callstack 0
   841   00000E                     ??_Lcd_Cmd:
   842                           
   843                           ; 1 bytes @ 0xD
   844   00000E                     	ds	1
   845   00000F                     guardar@i:
   846                           	callstack 0
   847   00000F                     estado@i_691:
   848                           	callstack 0
   849   00000F                     Lcd_Cmd@a:
   850                           	callstack 0
   851   00000F                     Lcd_Write_Char@y:
   852                           	callstack 0
   853   00000F                     
   854                           ; 1 bytes @ 0xE
   855   00000F                     	ds	1
   856   000010                     guardar@i_686:
   857                           	callstack 0
   858   000010                     estado@i_692:
   859                           	callstack 0
   860   000010                     Lcd_Set_Cursor@b:
   861                           	callstack 0
   862   000010                     Lcd_Write_Char@a:
   863                           	callstack 0
   864   000010                     ??_Lcd_Init:
   865   000010                     
   866                           ; 1 bytes @ 0xF
   867   000010                     	ds	1
   868   000011                     guardar@i_687:
   869                           	callstack 0
   870   000011                     Lcd_Set_Cursor@a:
   871                           	callstack 0
   872   000011                     Lcd_Write_String@a:
   873                           	callstack 0
   874   000011                     Lcd_CGRAM_CreateChar@chardata:
   875                           	callstack 0
   876   000011                     
   877                           ; 1 bytes @ 0x10
   878   000011                     	ds	1
   879   000012                     Lcd_Set_Cursor@z:
   880                           	callstack 0
   881   000012                     ??_Lcd_CGRAM_CreateChar:
   882   000012                     ??_Lcd_Write_String:
   883   000012                     ??_dejar:
   884                           
   885                           ; 1 bytes @ 0x11
   886   000012                     	ds	1
   887   000013                     Lcd_Set_Cursor@y:
   888                           	callstack 0
   889   000013                     Lcd_CGRAM_CreateChar@add:
   890                           	callstack 0
   891   000013                     Lcd_Write_String@i:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x12
   895   000013                     	ds	1
   896   000014                     Lcd_Set_Cursor@temp:
   897                           	callstack 0
   898   000014                     Lcd_CGRAM_CreateChar@i:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x13
   902   000014                     	ds	1
   903   000015                     Actualizar_Matriz@i:
   904                           	callstack 0
   905   000015                     Lcd_CGRAM_CreateChar@i_872:
   906                           	callstack 0
   907   000015                     
   908                           ; 1 bytes @ 0x14
   909   000015                     	ds	1
   910   000016                     Actualizar_Matriz@i_682:
   911                           	callstack 0
   912   000016                     Lcd_CGRAM_CreateChar@i_873:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x15
   916   000016                     	ds	1
   917   000017                     Actualizar_Matriz@i_683:
   918                           	callstack 0
   919   000017                     Lcd_CGRAM_CreateChar@i_874:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x16
   923   000017                     	ds	1
   924   000018                     Lcd_CGRAM_CreateChar@i_875:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x17
   928   000018                     	ds	1
   929   000019                     Lcd_CGRAM_CreateChar@i_876:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x18
   933   000019                     	ds	1
   934   00001A                     Lcd_CGRAM_CreateChar@i_877:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x19
   938   00001A                     	ds	1
   939   00001B                     Lcd_CGRAM_CreateChar@i_878:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x1A
   943   00001B                     	ds	1
   944   00001C                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x1B
   947   00001C                     	ds	2
   948                           
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 235 in file "ASCENSOR.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         0       0       0       0       0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0       0       0
   970 ;;      Temps:          2       0       0       0       0       0       0       0       0
   971 ;;      Totals:         2       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:        2 bytes
   973 ;; Hardware stack levels required when called: 9
   974 ;; This function calls:
   975 ;;		_Actualizar_Matriz
   976 ;;		_Lcd_CGRAM_Close
   977 ;;		_Lcd_CGRAM_CreateChar
   978 ;;		_Lcd_CGRAM_Init
   979 ;;		_Lcd_Clear
   980 ;;		_Lcd_Init
   981 ;;		_Lcd_Set_Cursor
   982 ;;		_Lcd_Write_Char
   983 ;;		_Lcd_Write_String
   984 ;;		_Modificar
   985 ;;		_dejar
   986 ;;		_detectar
   987 ;;		_estado
   988 ;;		_init_int
   989 ;;		_init_ports
   990 ;;		_reposo
   991 ;; This function is called by:
   992 ;;		Startup code after reset
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text0
   997   000A10                     __ptext0:
   998                           	callstack 0
   999   000A10                     _main:
  1000                           	callstack 22
  1001   000A10                     
  1002                           ;ASCENSOR.c: 236:     init_ports();
  1003   000A10  EC3B  F009         	call	_init_ports	;wreg free
  1004                           
  1005                           ;ASCENSOR.c: 237:     init_int();
  1006   000A14  EC57  F009         	call	_init_int	;wreg free
  1007                           
  1008                           ;ASCENSOR.c: 238:     Lcd_Init();
  1009   000A18  EC27  F007         	call	_Lcd_Init	;wreg free
  1010                           
  1011                           ;ASCENSOR.c: 240:     Lcd_CGRAM_Init();
  1012   000A1C  EC80  F009         	call	_Lcd_CGRAM_Init	;wreg free
  1013   000A20                     
  1014                           ;ASCENSOR.c: 241:     Lcd_CGRAM_CreateChar(0,figura_1);
  1015   000A20  0E09               	movlw	low _figura_1
  1016   000A22  6E11               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1017   000A24  0E00               	movlw	0
  1018   000A26  EC14  F004         	call	_Lcd_CGRAM_CreateChar
  1019   000A2A                     
  1020                           ;ASCENSOR.c: 242:     Lcd_CGRAM_CreateChar(1,figura_2);
  1021   000A2A  0E01               	movlw	low _figura_2
  1022   000A2C  6E11               	movwf	Lcd_CGRAM_CreateChar@chardata^0,c
  1023   000A2E  0E01               	movlw	1
  1024   000A30  EC14  F004         	call	_Lcd_CGRAM_CreateChar
  1025                           
  1026                           ;ASCENSOR.c: 243:     Lcd_CGRAM_Close();
  1027   000A34  EC87  F009         	call	_Lcd_CGRAM_Close	;wreg free
  1028   000A38                     
  1029                           ;ASCENSOR.c: 245:     estado();
  1030   000A38  ECE4  F007         	call	_estado	;wreg free
  1031   000A3C                     
  1032                           ;ASCENSOR.c: 246:     Lcd_Clear();
  1033   000A3C  EC79  F009         	call	_Lcd_Clear	;wreg free
  1034   000A40                     
  1035                           ;ASCENSOR.c: 247:     Lcd_Set_Cursor(1,1);
  1036   000A40  0E01               	movlw	1
  1037   000A42  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  1038   000A44  0E01               	movlw	1
  1039   000A46  EC0E  F006         	call	_Lcd_Set_Cursor
  1040   000A4A                     
  1041                           ;ASCENSOR.c: 248:     Lcd_Write_String("NEGRAS");
  1042   000A4A  0E19               	movlw	low STR_1
  1043   000A4C  6E11               	movwf	Lcd_Write_String@a^0,c
  1044   000A4E  ECA0  F008         	call	_Lcd_Write_String	;wreg free
  1045   000A52                     
  1046                           ;ASCENSOR.c: 249:     Lcd_Set_Cursor(2,1);
  1047   000A52  0E01               	movlw	1
  1048   000A54  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  1049   000A56  0E02               	movlw	2
  1050   000A58  EC0E  F006         	call	_Lcd_Set_Cursor
  1051   000A5C                     
  1052                           ;ASCENSOR.c: 250:     Lcd_Write_String("BLANCAS");
  1053   000A5C  0E11               	movlw	low STR_2
  1054   000A5E  6E11               	movwf	Lcd_Write_String@a^0,c
  1055   000A60  ECA0  F008         	call	_Lcd_Write_String	;wreg free
  1056   000A64                     
  1057                           ;ASCENSOR.c: 251:     Lcd_Set_Cursor(3,1);
  1058   000A64  0E01               	movlw	1
  1059   000A66  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  1060   000A68  0E03               	movlw	3
  1061   000A6A  EC0E  F006         	call	_Lcd_Set_Cursor
  1062   000A6E                     
  1063                           ;ASCENSOR.c: 252:     Lcd_Write_String("METAL");
  1064   000A6E  0E20               	movlw	low STR_3
  1065   000A70  6E11               	movwf	Lcd_Write_String@a^0,c
  1066   000A72  ECA0  F008         	call	_Lcd_Write_String	;wreg free
  1067   000A76                     
  1068                           ;ASCENSOR.c: 253:     _delay((unsigned long)((200)*(4000000/4000.0)));
  1069   000A76  0E02               	movlw	2
  1070   000A78  6E1D               	movwf	(??_main+1)^0,c
  1071   000A7A  0E04               	movlw	4
  1072   000A7C  6E1C               	movwf	??_main^0,c
  1073   000A7E  0EBA               	movlw	186
  1074   000A80                     u1247:
  1075   000A80  2EE8               	decfsz	wreg,f,c
  1076   000A82  D7FE               	bra	u1247
  1077   000A84  2E1C               	decfsz	??_main^0,f,c
  1078   000A86  D7FC               	bra	u1247
  1079   000A88  2E1D               	decfsz	(??_main+1)^0,f,c
  1080   000A8A  D7FA               	bra	u1247
  1081   000A8C  D000               	nop2	
  1082   000A8E                     l2042:
  1083                           
  1084                           ;ASCENSOR.c: 256:         Actualizar_Matriz();
  1085   000A8E  EC9B  F005         	call	_Actualizar_Matriz	;wreg free
  1086   000A92                     
  1087                           ;ASCENSOR.c: 257:         INTCONbits.GIEL=1;
  1088   000A92  8CF2               	bsf	242,6,c	;volatile
  1089                           
  1090                           ;ASCENSOR.c: 258:     while(PORTBbits.RB0==0){
  1091   000A94  EF6C  F005         	goto	l2056
  1092   000A98                     l196:
  1093                           
  1094                           ;ASCENSOR.c: 259:   if(PORTAbits.RA2==1 || PORTAbits.RA1==1){
  1095   000A98  B480               	btfsc	128,2,c	;volatile
  1096   000A9A  EF51  F005         	goto	u1151
  1097   000A9E  EF53  F005         	goto	u1150
  1098   000AA2                     u1151:
  1099   000AA2  EF5A  F005         	goto	l2048
  1100   000AA6                     u1150:
  1101   000AA6  A280               	btfss	128,1,c	;volatile
  1102   000AA8  EF58  F005         	goto	u1161
  1103   000AAC  EF5A  F005         	goto	u1160
  1104   000AB0                     u1161:
  1105   000AB0  EF5C  F005         	goto	l2050
  1106   000AB4                     u1160:
  1107   000AB4                     l2048:
  1108                           
  1109                           ;ASCENSOR.c: 260:       reposo();
  1110   000AB4  ECC5  F008         	call	_reposo	;wreg free
  1111   000AB8                     l2050:
  1112                           
  1113                           ;ASCENSOR.c: 262:         if( PORTBbits.RB2==1 || PORTBbits.RB3==1){
  1114   000AB8  B481               	btfsc	129,2,c	;volatile
  1115   000ABA  EF61  F005         	goto	u1171
  1116   000ABE  EF63  F005         	goto	u1170
  1117   000AC2                     u1171:
  1118   000AC2  EF6A  F005         	goto	l2054
  1119   000AC6                     u1170:
  1120   000AC6  A681               	btfss	129,3,c	;volatile
  1121   000AC8  EF68  F005         	goto	u1181
  1122   000ACC  EF6A  F005         	goto	u1180
  1123   000AD0                     u1181:
  1124   000AD0  EF6C  F005         	goto	l2056
  1125   000AD4                     u1180:
  1126   000AD4                     l2054:
  1127                           
  1128                           ;ASCENSOR.c: 263:             Modificar();
  1129   000AD4  EC79  F008         	call	_Modificar	;wreg free
  1130   000AD8                     l2056:
  1131                           
  1132                           ;ASCENSOR.c: 258:     while(PORTBbits.RB0==0){
  1133   000AD8  A081               	btfss	129,0,c	;volatile
  1134   000ADA  EF71  F005         	goto	u1191
  1135   000ADE  EF73  F005         	goto	u1190
  1136   000AE2                     u1191:
  1137   000AE2  EF4C  F005         	goto	l196
  1138   000AE6                     u1190:
  1139   000AE6                     
  1140                           ;ASCENSOR.c: 266:     Lcd_Set_Cursor(2,1);
  1141   000AE6  0E01               	movlw	1
  1142   000AE8  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  1143   000AEA  0E02               	movlw	2
  1144   000AEC  EC0E  F006         	call	_Lcd_Set_Cursor
  1145                           
  1146                           ;ASCENSOR.c: 267:     Lcd_Write_Char(1);
  1147   000AF0  0E01               	movlw	1
  1148   000AF2  ECE6  F008         	call	_Lcd_Write_Char
  1149   000AF6                     
  1150                           ;ASCENSOR.c: 268:     detectar();
  1151   000AF6  EC68  F007         	call	_detectar	;wreg free
  1152   000AFA                     
  1153                           ;ASCENSOR.c: 269:     if(METAL==1 || BLANCA==1 || NEGRA==1){
  1154   000AFA  042E               	decf	_METAL^0,w,c
  1155   000AFC  B4D8               	btfsc	status,2,c
  1156   000AFE  EF83  F005         	goto	u1201
  1157   000B02  EF85  F005         	goto	u1200
  1158   000B06                     u1201:
  1159   000B06  EF95  F005         	goto	l2068
  1160   000B0A                     u1200:
  1161   000B0A  042D               	decf	_BLANCA^0,w,c
  1162   000B0C  B4D8               	btfsc	status,2,c
  1163   000B0E  EF8B  F005         	goto	u1211
  1164   000B12  EF8D  F005         	goto	u1210
  1165   000B16                     u1211:
  1166   000B16  EF95  F005         	goto	l2068
  1167   000B1A                     u1210:
  1168   000B1A  042C               	decf	_NEGRA^0,w,c
  1169   000B1C  A4D8               	btfss	status,2,c
  1170   000B1E  EF93  F005         	goto	u1221
  1171   000B22  EF95  F005         	goto	u1220
  1172   000B26                     u1221:
  1173   000B26  EF47  F005         	goto	l2042
  1174   000B2A                     u1220:
  1175   000B2A                     l2068:
  1176                           
  1177                           ;ASCENSOR.c: 270:     dejar();
  1178   000B2A  ECE0  F006         	call	_dejar	;wreg free
  1179                           
  1180                           ;ASCENSOR.c: 271:      }
  1181   000B2E  EF47  F005         	goto	l2042
  1182   000B32  EF6C  F000         	goto	start
  1183   000B36                     __end_of_main:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _reposo *****************
  1187 ;; Defined at:
  1188 ;;		line 70 in file "ASCENSOR.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		None
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 5
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text1
  1217   00118A                     __ptext1:
  1218                           	callstack 0
  1219   00118A                     _reposo:
  1220                           	callstack 25
  1221   00118A                     
  1222                           ;ASCENSOR.c: 71:  if(PORTAbits.RA1==1){
  1223   00118A  A280               	btfss	128,1,c	;volatile
  1224   00118C  EFCA  F008         	goto	u171
  1225   001190  EFCC  F008         	goto	u170
  1226   001194                     u171:
  1227   001194  EFD5  F008         	goto	l105
  1228   001198                     u170:
  1229   001198                     
  1230                           ;ASCENSOR.c: 72:   LATDbits.LATD3=1;
  1231   001198  868C               	bsf	140,3,c	;volatile
  1232   00119A                     l106:
  1233   00119A  B280               	btfsc	128,1,c	;volatile
  1234   00119C  EFD2  F008         	goto	u181
  1235   0011A0  EFD4  F008         	goto	u180
  1236   0011A4                     u181:
  1237   0011A4  EFCD  F008         	goto	l106
  1238   0011A8                     u180:
  1239   0011A8                     
  1240                           ;ASCENSOR.c: 74:      LATDbits.LATD3=0;
  1241   0011A8  968C               	bcf	140,3,c	;volatile
  1242   0011AA                     l105:
  1243                           
  1244                           ;ASCENSOR.c: 77:     if(PORTAbits.RA2==1){
  1245   0011AA  A480               	btfss	128,2,c	;volatile
  1246   0011AC  EFDA  F008         	goto	u191
  1247   0011B0  EFDC  F008         	goto	u190
  1248   0011B4                     u191:
  1249   0011B4  EFE5  F008         	goto	l113
  1250   0011B8                     u190:
  1251   0011B8                     
  1252                           ;ASCENSOR.c: 78:      LATDbits.LATD0=1;
  1253   0011B8  808C               	bsf	140,0,c	;volatile
  1254   0011BA                     l110:
  1255   0011BA  B480               	btfsc	128,2,c	;volatile
  1256   0011BC  EFE2  F008         	goto	u201
  1257   0011C0  EFE4  F008         	goto	u200
  1258   0011C4                     u201:
  1259   0011C4  EFDD  F008         	goto	l110
  1260   0011C8                     u200:
  1261   0011C8                     
  1262                           ;ASCENSOR.c: 80:      LATDbits.LATD0=0;
  1263   0011C8  908C               	bcf	140,0,c	;volatile
  1264   0011CA                     l113:
  1265   0011CA  0012               	return		;funcret
  1266   0011CC                     __end_of_reposo:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _init_ports *****************
  1270 ;; Defined at:
  1271 ;;		line 41 in file "ASCENSOR.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 5
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text2
  1300   001276                     __ptext2:
  1301                           	callstack 0
  1302   001276                     _init_ports:
  1303                           	callstack 25
  1304   001276                     
  1305                           ;ASCENSOR.c: 42:     ADCON1bits.PCFG=0x0F;
  1306   001276  0E0F               	movlw	15
  1307   001278  12C1               	iorwf	193,f,c	;volatile
  1308   00127A                     
  1309                           ;ASCENSOR.c: 43:     TRISB=0XFF;
  1310   00127A  6893               	setf	147,c	;volatile
  1311   00127C                     
  1312                           ;ASCENSOR.c: 44:     TRISA=0XFF;
  1313   00127C  6892               	setf	146,c	;volatile
  1314   00127E                     
  1315                           ;ASCENSOR.c: 45:     TRISD=0X00;
  1316   00127E  6A95               	clrf	149,c	;volatile
  1317   001280                     
  1318                           ;ASCENSOR.c: 46:     TRISE=0X00;
  1319   001280  6A96               	clrf	150,c	;volatile
  1320   001282                     
  1321                           ;ASCENSOR.c: 47:     TRISC=0XFF;
  1322   001282  6894               	setf	148,c	;volatile
  1323   001284                     
  1324                           ;ASCENSOR.c: 48:     TRISCbits.RC0=0;
  1325   001284  9094               	bcf	148,0,c	;volatile
  1326   001286                     
  1327                           ;ASCENSOR.c: 49:     TRISCbits.RC6=0;
  1328   001286  9C94               	bcf	148,6,c	;volatile
  1329   001288                     
  1330                           ;ASCENSOR.c: 51:     LATA=0X00;
  1331   001288  6A89               	clrf	137,c	;volatile
  1332   00128A                     
  1333                           ;ASCENSOR.c: 52:     LATB=0X00;
  1334   00128A  6A8A               	clrf	138,c	;volatile
  1335   00128C                     
  1336                           ;ASCENSOR.c: 53:     LATC=0X00;
  1337   00128C  6A8B               	clrf	139,c	;volatile
  1338   00128E                     
  1339                           ;ASCENSOR.c: 54:     LATD=0X00;
  1340   00128E  6A8C               	clrf	140,c	;volatile
  1341   001290                     
  1342                           ;ASCENSOR.c: 55:     LATE=0X00;
  1343   001290  6A8D               	clrf	141,c	;volatile
  1344   001292  0012               	return		;funcret
  1345   001294                     __end_of_init_ports:
  1346                           	callstack 0
  1347                           
  1348 ;; *************** function _init_int *****************
  1349 ;; Defined at:
  1350 ;;		line 59 in file "ASCENSOR.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1364 ;;      Params:         0       0       0       0       0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 5
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379   0012AE                     __ptext3:
  1380                           	callstack 0
  1381   0012AE                     _init_int:
  1382                           	callstack 25
  1383   0012AE                     
  1384                           ;ASCENSOR.c: 60:     RCONbits.IPEN= 1;
  1385   0012AE  8ED0               	bsf	208,7,c	;volatile
  1386                           
  1387                           ;ASCENSOR.c: 61:     INTCONbits.RBIE=1;
  1388   0012B0  86F2               	bsf	242,3,c	;volatile
  1389                           
  1390                           ;ASCENSOR.c: 62:     INTCONbits.RBIF=0;
  1391   0012B2  90F2               	bcf	242,0,c	;volatile
  1392                           
  1393                           ;ASCENSOR.c: 63:     INTCON2bits.RBIP=0;
  1394   0012B4  90F1               	bcf	241,0,c	;volatile
  1395   0012B6                     
  1396                           ;ASCENSOR.c: 64:     T0CON = 0B01111000;
  1397   0012B6  0E78               	movlw	120
  1398   0012B8  6ED5               	movwf	213,c	;volatile
  1399                           
  1400                           ;ASCENSOR.c: 65:     INTCON = 0B10101000;
  1401   0012BA  0EA8               	movlw	168
  1402   0012BC  6EF2               	movwf	242,c	;volatile
  1403   0012BE                     
  1404                           ;ASCENSOR.c: 66:     INTCON2bits.TMR0IP = 1;
  1405   0012BE  84F1               	bsf	241,2,c	;volatile
  1406   0012C0  0012               	return		;funcret
  1407   0012C2                     __end_of_init_int:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _estado *****************
  1411 ;; Defined at:
  1412 ;;		line 152 in file "ASCENSOR.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               1   15[COMRAM] unsigned char 
  1417 ;;  i               1   14[COMRAM] unsigned char 
  1418 ;;  i               1   13[COMRAM] unsigned char 
  1419 ;;  g               1    0        unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 6
  1436 ;; This function calls:
  1437 ;;		_EEPROM_Read
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text4
  1444   000FC8                     __ptext4:
  1445                           	callstack 0
  1446   000FC8                     _estado:
  1447                           	callstack 24
  1448   000FC8                     
  1449                           ;ASCENSOR.c: 153:     char g;;ASCENSOR.c: 154:     for (char i=0; i<=3; i++){
  1450   000FC8  6A0E               	clrf	estado@i^0,c
  1451   000FCA                     l1316:
  1452                           
  1453                           ;ASCENSOR.c: 155:         Fila1[i]=EEPROM_Read(i);
  1454   000FCA  500E               	movf	estado@i^0,w,c
  1455   000FCC  0F26               	addlw	low _Fila1
  1456   000FCE  6ED9               	movwf	fsr2l,c
  1457   000FD0  6ADA               	clrf	fsr2h,c
  1458   000FD2  500E               	movf	estado@i^0,w,c
  1459   000FD4  EC6A  F009         	call	_EEPROM_Read
  1460   000FD8  6EDF               	movwf	indf2,c
  1461   000FDA                     
  1462                           ;ASCENSOR.c: 156:     }
  1463   000FDA  2A0E               	incf	estado@i^0,f,c
  1464   000FDC  0E03               	movlw	3
  1465   000FDE  640E               	cpfsgt	estado@i^0,c
  1466   000FE0  EFF4  F007         	goto	u331
  1467   000FE4  EFF6  F007         	goto	u330
  1468   000FE8                     u331:
  1469   000FE8  EFE5  F007         	goto	l1316
  1470   000FEC                     u330:
  1471   000FEC                     
  1472                           ;ASCENSOR.c: 157:     for (char i=0; i<=3; i++){
  1473   000FEC  6A0F               	clrf	estado@i_691^0,c
  1474   000FEE                     l1326:
  1475                           
  1476                           ;ASCENSOR.c: 158:         Fila2[i]=EEPROM_Read(i+4);
  1477   000FEE  500F               	movf	estado@i_691^0,w,c
  1478   000FF0  0F22               	addlw	low _Fila2
  1479   000FF2  6ED9               	movwf	fsr2l,c
  1480   000FF4  6ADA               	clrf	fsr2h,c
  1481   000FF6  500F               	movf	estado@i_691^0,w,c
  1482   000FF8  0F04               	addlw	4
  1483   000FFA  EC6A  F009         	call	_EEPROM_Read
  1484   000FFE  6EDF               	movwf	indf2,c
  1485   001000                     
  1486                           ;ASCENSOR.c: 159:     }
  1487   001000  2A0F               	incf	estado@i_691^0,f,c
  1488   001002  0E03               	movlw	3
  1489   001004  640F               	cpfsgt	estado@i_691^0,c
  1490   001006  EF07  F008         	goto	u341
  1491   00100A  EF09  F008         	goto	u340
  1492   00100E                     u341:
  1493   00100E  EFF7  F007         	goto	l1326
  1494   001012                     u340:
  1495   001012                     
  1496                           ;ASCENSOR.c: 160:     for (char i=0; i<=3; i++){
  1497   001012  6A10               	clrf	estado@i_692^0,c
  1498   001014                     l1336:
  1499                           
  1500                           ;ASCENSOR.c: 161:         Fila3[i]=EEPROM_Read(i+8);
  1501   001014  5010               	movf	estado@i_692^0,w,c
  1502   001016  0F1E               	addlw	low _Fila3
  1503   001018  6ED9               	movwf	fsr2l,c
  1504   00101A  6ADA               	clrf	fsr2h,c
  1505   00101C  5010               	movf	estado@i_692^0,w,c
  1506   00101E  0F08               	addlw	8
  1507   001020  EC6A  F009         	call	_EEPROM_Read
  1508   001024  6EDF               	movwf	indf2,c
  1509   001026                     
  1510                           ;ASCENSOR.c: 162:     }
  1511   001026  2A10               	incf	estado@i_692^0,f,c
  1512   001028  0E03               	movlw	3
  1513   00102A  6410               	cpfsgt	estado@i_692^0,c
  1514   00102C  EF1A  F008         	goto	u351
  1515   001030  EF1C  F008         	goto	u350
  1516   001034                     u351:
  1517   001034  EF0A  F008         	goto	l1336
  1518   001038                     u350:
  1519   001038  0012               	return		;funcret
  1520   00103A                     __end_of_estado:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _EEPROM_Read *****************
  1524 ;; Defined at:
  1525 ;;		line 20 in file "../EEPROM_RW.X/eeprom.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  dir             1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  dir             1   12[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      unsigned char 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        1 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 5
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_estado
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text5
  1554   0012D4                     __ptext5:
  1555                           	callstack 0
  1556   0012D4                     _EEPROM_Read:
  1557                           	callstack 24
  1558                           
  1559                           ;incstack = 0
  1560                           ;EEPROM_Read@dir stored from wreg
  1561   0012D4  6E0D               	movwf	EEPROM_Read@dir^0,c
  1562   0012D6                     
  1563                           ;../EEPROM_RW.X/eeprom.c: 20: unsigned char EEPROM_Read(unsigned char dir);../EEPROM_RW.
      +                          X/eeprom.c: 21: {;../EEPROM_RW.X/eeprom.c: 22:     EEADR = dir;
  1564   0012D6  C00D  FFA9         	movff	EEPROM_Read@dir,4009	;volatile
  1565   0012DA                     
  1566                           ;../EEPROM_RW.X/eeprom.c: 23:     EECON1bits.EEPGD = 0;
  1567   0012DA  9EA6               	bcf	166,7,c	;volsfr
  1568   0012DC                     
  1569                           ;../EEPROM_RW.X/eeprom.c: 24:     EECON1bits.CFGS = 0;
  1570   0012DC  9CA6               	bcf	166,6,c	;volsfr
  1571   0012DE                     
  1572                           ;../EEPROM_RW.X/eeprom.c: 25:     EECON1bits.RD = 1;
  1573   0012DE  80A6               	bsf	166,0,c	;volsfr
  1574   0012E0                     
  1575                           ;../EEPROM_RW.X/eeprom.c: 26:     return EEDATA;
  1576   0012E0  50A8               	movf	168,w,c	;volatile
  1577   0012E2  0012               	return		;funcret
  1578   0012E4                     __end_of_EEPROM_Read:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _detectar *****************
  1582 ;; Defined at:
  1583 ;;		line 85 in file "ASCENSOR.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 5
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text6
  1612   000ED0                     __ptext6:
  1613                           	callstack 0
  1614   000ED0                     _detectar:
  1615                           	callstack 25
  1616   000ED0                     
  1617                           ;ASCENSOR.c: 86:  if(PORTCbits.RC1==0 && PORTCbits.RC2==1){
  1618   000ED0  B282               	btfsc	130,1,c	;volatile
  1619   000ED2  EF6D  F007         	goto	u211
  1620   000ED6  EF6F  F007         	goto	u210
  1621   000EDA                     u211:
  1622   000EDA  EF7D  F007         	goto	l116
  1623   000EDE                     u210:
  1624   000EDE  A482               	btfss	130,2,c	;volatile
  1625   000EE0  EF74  F007         	goto	u221
  1626   000EE4  EF76  F007         	goto	u220
  1627   000EE8                     u221:
  1628   000EE8  EF7D  F007         	goto	l116
  1629   000EEC                     u220:
  1630   000EEC                     
  1631                           ;ASCENSOR.c: 87:   METAL=1;
  1632   000EEC  0E01               	movlw	1
  1633   000EEE  6E2E               	movwf	_METAL^0,c
  1634                           
  1635                           ;ASCENSOR.c: 88:   TMR0L= 250;
  1636   000EF0  0EFA               	movlw	250
  1637   000EF2  6ED6               	movwf	214,c	;volatile
  1638   000EF4                     
  1639                           ;ASCENSOR.c: 89:         T0CONbits.TMR0ON = 1;
  1640   000EF4  8ED5               	bsf	213,7,c	;volatile
  1641                           
  1642                           ;ASCENSOR.c: 90:  }
  1643   000EF6  EFA7  F007         	goto	l121
  1644   000EFA                     l116:
  1645   000EFA  A282               	btfss	130,1,c	;volatile
  1646   000EFC  EF82  F007         	goto	u231
  1647   000F00  EF84  F007         	goto	u230
  1648   000F04                     u231:
  1649   000F04  EF92  F007         	goto	l118
  1650   000F08                     u230:
  1651   000F08  B482               	btfsc	130,2,c	;volatile
  1652   000F0A  EF89  F007         	goto	u241
  1653   000F0E  EF8B  F007         	goto	u240
  1654   000F12                     u241:
  1655   000F12  EF92  F007         	goto	l118
  1656   000F16                     u240:
  1657   000F16                     
  1658                           ;ASCENSOR.c: 92:   BLANCA=1;
  1659   000F16  0E01               	movlw	1
  1660   000F18  6E2D               	movwf	_BLANCA^0,c
  1661                           
  1662                           ;ASCENSOR.c: 93:         TMR0L= 233;
  1663   000F1A  0EE9               	movlw	233
  1664   000F1C  6ED6               	movwf	214,c	;volatile
  1665   000F1E                     
  1666                           ;ASCENSOR.c: 94:         T0CONbits.TMR0ON = 1;
  1667   000F1E  8ED5               	bsf	213,7,c	;volatile
  1668                           
  1669                           ;ASCENSOR.c: 95:  }
  1670   000F20  EFA7  F007         	goto	l121
  1671   000F24                     l118:
  1672   000F24  B282               	btfsc	130,1,c	;volatile
  1673   000F26  EF97  F007         	goto	u251
  1674   000F2A  EF99  F007         	goto	u250
  1675   000F2E                     u251:
  1676   000F2E  EFA7  F007         	goto	l117
  1677   000F32                     u250:
  1678   000F32  B482               	btfsc	130,2,c	;volatile
  1679   000F34  EF9E  F007         	goto	u261
  1680   000F38  EFA0  F007         	goto	u260
  1681   000F3C                     u261:
  1682   000F3C  EFA7  F007         	goto	l117
  1683   000F40                     u260:
  1684   000F40                     
  1685                           ;ASCENSOR.c: 97:   NEGRA=1;
  1686   000F40  0E01               	movlw	1
  1687   000F42  6E2C               	movwf	_NEGRA^0,c
  1688                           
  1689                           ;ASCENSOR.c: 98:         TMR0L= 222;
  1690   000F44  0EDE               	movlw	222
  1691   000F46  6ED6               	movwf	214,c	;volatile
  1692   000F48                     
  1693                           ;ASCENSOR.c: 99:         T0CONbits.TMR0ON = 1;
  1694   000F48  8ED5               	bsf	213,7,c	;volatile
  1695   000F4A  EFA7  F007         	goto	l121
  1696   000F4E                     l117:
  1697   000F4E                     l121:
  1698   000F4E  0012               	return		;funcret
  1699   000F50                     __end_of_detectar:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _dejar *****************
  1703 ;; Defined at:
  1704 ;;		line 214 in file "ASCENSOR.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 7
  1725 ;; This function calls:
  1726 ;;		_guardar
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text7
  1733   000DC0                     __ptext7:
  1734                           	callstack 0
  1735   000DC0                     _dejar:
  1736                           	callstack 23
  1737   000DC0                     
  1738                           ;ASCENSOR.c: 216:     LATDbits.LATD1=1;
  1739   000DC0  828C               	bsf	140,1,c	;volatile
  1740                           
  1741                           ;ASCENSOR.c: 217:     LATDbits.LATD1=0;
  1742   000DC2  928C               	bcf	140,1,c	;volatile
  1743                           
  1744                           ;ASCENSOR.c: 219:     LATDbits.LATD2= 1;
  1745   000DC4  848C               	bsf	140,2,c	;volatile
  1746   000DC6                     l183:
  1747   000DC6  B48C               	btfsc	140,2,c	;volatile
  1748   000DC8  EFE8  F006         	goto	u911
  1749   000DCC  EFEA  F006         	goto	u910
  1750   000DD0                     u911:
  1751   000DD0  EFE3  F006         	goto	l183
  1752   000DD4                     u910:
  1753   000DD4                     
  1754                           ;ASCENSOR.c: 221:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1755   000DD4  0E03               	movlw	3
  1756   000DD6  6E13               	movwf	(??_dejar+1)^0,c
  1757   000DD8  0E8A               	movlw	138
  1758   000DDA  6E12               	movwf	??_dejar^0,c
  1759   000DDC  0E56               	movlw	86
  1760   000DDE                     u1257:
  1761   000DDE  2EE8               	decfsz	wreg,f,c
  1762   000DE0  D7FE               	bra	u1257
  1763   000DE2  2E12               	decfsz	??_dejar^0,f,c
  1764   000DE4  D7FC               	bra	u1257
  1765   000DE6  2E13               	decfsz	(??_dejar+1)^0,f,c
  1766   000DE8  D7FA               	bra	u1257
  1767   000DEA                     
  1768                           ;ASCENSOR.c: 222:     LATCbits.LC0=1;
  1769   000DEA  808B               	bsf	139,0,c	;volatile
  1770                           
  1771                           ;ASCENSOR.c: 223:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1772   000DEC  0E02               	movlw	2
  1773   000DEE  6E13               	movwf	(??_dejar+1)^0,c
  1774   000DF0  0E45               	movlw	69
  1775   000DF2  6E12               	movwf	??_dejar^0,c
  1776   000DF4  0EAA               	movlw	170
  1777   000DF6                     u1267:
  1778   000DF6  2EE8               	decfsz	wreg,f,c
  1779   000DF8  D7FE               	bra	u1267
  1780   000DFA  2E12               	decfsz	??_dejar^0,f,c
  1781   000DFC  D7FC               	bra	u1267
  1782   000DFE  2E13               	decfsz	(??_dejar+1)^0,f,c
  1783   000E00  D7FA               	bra	u1267
  1784   000E02                     
  1785                           ;ASCENSOR.c: 224:     TMR0L= 253;
  1786   000E02  0EFD               	movlw	253
  1787   000E04  6ED6               	movwf	214,c	;volatile
  1788   000E06                     
  1789                           ;ASCENSOR.c: 225:     T0CONbits.TMR0ON = 1;
  1790   000E06  8ED5               	bsf	213,7,c	;volatile
  1791   000E08                     
  1792                           ;ASCENSOR.c: 226:     LATDbits.LATD3=1;
  1793   000E08  868C               	bsf	140,3,c	;volatile
  1794   000E0A                     l186:
  1795   000E0A  B68C               	btfsc	140,3,c	;volatile
  1796   000E0C  EF0A  F007         	goto	u921
  1797   000E10  EF0C  F007         	goto	u920
  1798   000E14                     u921:
  1799   000E14  EF05  F007         	goto	l186
  1800   000E18                     u920:
  1801   000E18                     
  1802                           ;ASCENSOR.c: 228:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1803   000E18  0E03               	movlw	3
  1804   000E1A  6E13               	movwf	(??_dejar+1)^0,c
  1805   000E1C  0E8A               	movlw	138
  1806   000E1E  6E12               	movwf	??_dejar^0,c
  1807   000E20  0E56               	movlw	86
  1808   000E22                     u1277:
  1809   000E22  2EE8               	decfsz	wreg,f,c
  1810   000E24  D7FE               	bra	u1277
  1811   000E26  2E12               	decfsz	??_dejar^0,f,c
  1812   000E28  D7FC               	bra	u1277
  1813   000E2A  2E13               	decfsz	(??_dejar+1)^0,f,c
  1814   000E2C  D7FA               	bra	u1277
  1815   000E2E                     
  1816                           ;ASCENSOR.c: 229:     guardar();
  1817   000E2E  ECA8  F007         	call	_guardar	;wreg free
  1818   000E32                     
  1819                           ;ASCENSOR.c: 230:     LATCbits.LC0=0;
  1820   000E32  908B               	bcf	139,0,c	;volatile
  1821   000E34                     
  1822                           ;ASCENSOR.c: 231:     _delay((unsigned long)((200)*(4000000/4000.0)));
  1823   000E34  0E02               	movlw	2
  1824   000E36  6E13               	movwf	(??_dejar+1)^0,c
  1825   000E38  0E04               	movlw	4
  1826   000E3A  6E12               	movwf	??_dejar^0,c
  1827   000E3C  0EBA               	movlw	186
  1828   000E3E                     u1287:
  1829   000E3E  2EE8               	decfsz	wreg,f,c
  1830   000E40  D7FE               	bra	u1287
  1831   000E42  2E12               	decfsz	??_dejar^0,f,c
  1832   000E44  D7FC               	bra	u1287
  1833   000E46  2E13               	decfsz	(??_dejar+1)^0,f,c
  1834   000E48  D7FA               	bra	u1287
  1835   000E4A  D000               	nop2	
  1836   000E4C  0012               	return		;funcret
  1837   000E4E                     __end_of_dejar:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _guardar *****************
  1841 ;; Defined at:
  1842 ;;		line 140 in file "ASCENSOR.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  i               1   16[COMRAM] unsigned char 
  1847 ;;  i               1   15[COMRAM] unsigned char 
  1848 ;;  i               1   14[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0
  1859 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1861 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1862 ;;Total ram usage:        3 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 6
  1865 ;; This function calls:
  1866 ;;		_EEPROM_Write
  1867 ;; This function is called by:
  1868 ;;		_dejar
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text8
  1873   000F50                     __ptext8:
  1874                           	callstack 0
  1875   000F50                     _guardar:
  1876                           	callstack 23
  1877   000F50                     
  1878                           ;ASCENSOR.c: 141:     for (char i=0; i<=3; i++){
  1879   000F50  6A0F               	clrf	guardar@i^0,c
  1880   000F52                     l1728:
  1881                           
  1882                           ;ASCENSOR.c: 142:         EEPROM_Write(i,Fila1[i]);
  1883   000F52  500F               	movf	guardar@i^0,w,c
  1884   000F54  0F26               	addlw	low _Fila1
  1885   000F56  6ED9               	movwf	fsr2l,c
  1886   000F58  6ADA               	clrf	fsr2h,c
  1887   000F5A  50DF               	movf	indf2,w,c
  1888   000F5C  6E0D               	movwf	EEPROM_Write@data^0,c
  1889   000F5E  500F               	movf	guardar@i^0,w,c
  1890   000F60  EC02  F009         	call	_EEPROM_Write
  1891   000F64                     
  1892                           ;ASCENSOR.c: 143:     }
  1893   000F64  2A0F               	incf	guardar@i^0,f,c
  1894   000F66  0E03               	movlw	3
  1895   000F68  640F               	cpfsgt	guardar@i^0,c
  1896   000F6A  EFB9  F007         	goto	u821
  1897   000F6E  EFBB  F007         	goto	u820
  1898   000F72                     u821:
  1899   000F72  EFA9  F007         	goto	l1728
  1900   000F76                     u820:
  1901   000F76                     
  1902                           ;ASCENSOR.c: 144:     for (char i=0; i<=3; i++){
  1903   000F76  6A10               	clrf	guardar@i_686^0,c
  1904   000F78                     l1738:
  1905                           
  1906                           ;ASCENSOR.c: 145:         EEPROM_Write(i+4,Fila2[i]);
  1907   000F78  5010               	movf	guardar@i_686^0,w,c
  1908   000F7A  0F22               	addlw	low _Fila2
  1909   000F7C  6ED9               	movwf	fsr2l,c
  1910   000F7E  6ADA               	clrf	fsr2h,c
  1911   000F80  50DF               	movf	indf2,w,c
  1912   000F82  6E0D               	movwf	EEPROM_Write@data^0,c
  1913   000F84  5010               	movf	guardar@i_686^0,w,c
  1914   000F86  0F04               	addlw	4
  1915   000F88  EC02  F009         	call	_EEPROM_Write
  1916   000F8C                     
  1917                           ;ASCENSOR.c: 146:     }
  1918   000F8C  2A10               	incf	guardar@i_686^0,f,c
  1919   000F8E  0E03               	movlw	3
  1920   000F90  6410               	cpfsgt	guardar@i_686^0,c
  1921   000F92  EFCD  F007         	goto	u831
  1922   000F96  EFCF  F007         	goto	u830
  1923   000F9A                     u831:
  1924   000F9A  EFBC  F007         	goto	l1738
  1925   000F9E                     u830:
  1926   000F9E                     
  1927                           ;ASCENSOR.c: 147:     for (char i=0; i<=3; i++){
  1928   000F9E  6A11               	clrf	guardar@i_687^0,c
  1929   000FA0                     l1748:
  1930                           
  1931                           ;ASCENSOR.c: 148:         EEPROM_Write(i+8,Fila3[i]);
  1932   000FA0  5011               	movf	guardar@i_687^0,w,c
  1933   000FA2  0F1E               	addlw	low _Fila3
  1934   000FA4  6ED9               	movwf	fsr2l,c
  1935   000FA6  6ADA               	clrf	fsr2h,c
  1936   000FA8  50DF               	movf	indf2,w,c
  1937   000FAA  6E0D               	movwf	EEPROM_Write@data^0,c
  1938   000FAC  5011               	movf	guardar@i_687^0,w,c
  1939   000FAE  0F08               	addlw	8
  1940   000FB0  EC02  F009         	call	_EEPROM_Write
  1941   000FB4                     
  1942                           ;ASCENSOR.c: 149:     }
  1943   000FB4  2A11               	incf	guardar@i_687^0,f,c
  1944   000FB6  0E03               	movlw	3
  1945   000FB8  6411               	cpfsgt	guardar@i_687^0,c
  1946   000FBA  EFE1  F007         	goto	u841
  1947   000FBE  EFE3  F007         	goto	u840
  1948   000FC2                     u841:
  1949   000FC2  EFD0  F007         	goto	l1748
  1950   000FC6                     u840:
  1951   000FC6  0012               	return		;funcret
  1952   000FC8                     __end_of_guardar:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _EEPROM_Write *****************
  1956 ;; Defined at:
  1957 ;;		line 3 in file "../EEPROM_RW.X/eeprom.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  dir             1    wreg     unsigned char 
  1960 ;;  data            1   12[COMRAM] unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  dir             1   13[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1972 ;;      Params:         1       0       0       0       0       0       0       0       0
  1973 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1975 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        2 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 5
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_guardar
  1983 ;;		_EEPROM_Clear
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text9
  1988   001204                     __ptext9:
  1989                           	callstack 0
  1990   001204                     _EEPROM_Write:
  1991                           	callstack 23
  1992                           
  1993                           ;incstack = 0
  1994                           ;EEPROM_Write@dir stored from wreg
  1995   001204  6E0E               	movwf	EEPROM_Write@dir^0,c
  1996   001206                     
  1997                           ;../EEPROM_RW.X/eeprom.c: 3: void EEPROM_Write(unsigned char dir, unsigned char data);..
      +                          /EEPROM_RW.X/eeprom.c: 4: {;../EEPROM_RW.X/eeprom.c: 5:     EEADR = dir;
  1998   001206  C00E  FFA9         	movff	EEPROM_Write@dir,4009	;volatile
  1999   00120A                     
  2000                           ;../EEPROM_RW.X/eeprom.c: 6:     EEDATA = data;
  2001   00120A  C00D  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2002   00120E                     
  2003                           ;../EEPROM_RW.X/eeprom.c: 7:     EECON1bits.EEPGD = 0;
  2004   00120E  9EA6               	bcf	166,7,c	;volsfr
  2005   001210                     
  2006                           ;../EEPROM_RW.X/eeprom.c: 8:     EECON1bits.CFGS = 0;
  2007   001210  9CA6               	bcf	166,6,c	;volsfr
  2008   001212                     
  2009                           ;../EEPROM_RW.X/eeprom.c: 9:     EECON1bits.WREN = 1;
  2010   001212  84A6               	bsf	166,2,c	;volsfr
  2011   001214                     
  2012                           ;../EEPROM_RW.X/eeprom.c: 10:     INTCONbits.GIE = 0;
  2013   001214  9EF2               	bcf	242,7,c	;volatile
  2014   001216                     
  2015                           ;../EEPROM_RW.X/eeprom.c: 11:     EECON2 = 0x55;
  2016   001216  0E55               	movlw	85
  2017   001218  6EA7               	movwf	167,c	;volsfr
  2018   00121A                     
  2019                           ;../EEPROM_RW.X/eeprom.c: 12:     EECON2 = 0x0AA;
  2020   00121A  0EAA               	movlw	170
  2021   00121C  6EA7               	movwf	167,c	;volsfr
  2022   00121E                     
  2023                           ;../EEPROM_RW.X/eeprom.c: 13:     EECON1bits.WR = 1;
  2024   00121E  82A6               	bsf	166,1,c	;volsfr
  2025   001220                     
  2026                           ;../EEPROM_RW.X/eeprom.c: 14:     INTCONbits.GIE = 1;
  2027   001220  8EF2               	bsf	242,7,c	;volatile
  2028   001222                     l327:
  2029   001222  A8A1               	btfss	161,4,c	;volatile
  2030   001224  EF16  F009         	goto	u731
  2031   001228  EF18  F009         	goto	u730
  2032   00122C                     u731:
  2033   00122C  EF11  F009         	goto	l327
  2034   001230                     u730:
  2035   001230                     
  2036                           ;../EEPROM_RW.X/eeprom.c: 16:     PIR2bits.EEIF = 0;
  2037   001230  98A1               	bcf	161,4,c	;volatile
  2038                           
  2039                           ;../EEPROM_RW.X/eeprom.c: 17:     EECON1bits.WREN = 0;
  2040   001232  94A6               	bcf	166,2,c	;volsfr
  2041   001234  0012               	return		;funcret
  2042   001236                     __end_of_EEPROM_Write:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _Modificar *****************
  2046 ;; Defined at:
  2047 ;;		line 197 in file "ASCENSOR.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 8
  2068 ;; This function calls:
  2069 ;;		_Lcd_NoBlink
  2070 ;;		_Lcd_Write_Char
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text10
  2077   0010F2                     __ptext10:
  2078                           	callstack 0
  2079   0010F2                     _Modificar:
  2080                           	callstack 22
  2081   0010F2                     
  2082                           ;ASCENSOR.c: 198:     if (PORTBbits.RB3==1){
  2083   0010F2  A681               	btfss	129,3,c	;volatile
  2084   0010F4  EF7E  F008         	goto	u361
  2085   0010F8  EF80  F008         	goto	u360
  2086   0010FC                     u361:
  2087   0010FC  EF8B  F008         	goto	l172
  2088   001100                     u360:
  2089   001100                     
  2090                           ;ASCENSOR.c: 199:         Lcd_Write_Char(1);
  2091   001100  0E01               	movlw	1
  2092   001102  ECE6  F008         	call	_Lcd_Write_Char
  2093   001106                     
  2094                           ;ASCENSOR.c: 201:         c++;
  2095   001106  2A2A               	incf	_c^0,f,c
  2096   001108                     l173:
  2097   001108  B681               	btfsc	129,3,c	;volatile
  2098   00110A  EF89  F008         	goto	u371
  2099   00110E  EF8B  F008         	goto	u370
  2100   001112                     u371:
  2101   001112  EF84  F008         	goto	l173
  2102   001116                     u370:
  2103   001116                     l172:
  2104                           
  2105                           ;ASCENSOR.c: 204:     if (PORTBbits.RB2==1){
  2106   001116  A481               	btfss	129,2,c	;volatile
  2107   001118  EF90  F008         	goto	u381
  2108   00111C  EF92  F008         	goto	u380
  2109   001120                     u381:
  2110   001120  EF9D  F008         	goto	l1354
  2111   001124                     u380:
  2112   001124                     
  2113                           ;ASCENSOR.c: 205:         Lcd_Write_Char(0);
  2114   001124  0E00               	movlw	0
  2115   001126  ECE6  F008         	call	_Lcd_Write_Char
  2116   00112A                     
  2117                           ;ASCENSOR.c: 207:         c++;
  2118   00112A  2A2A               	incf	_c^0,f,c
  2119   00112C                     l177:
  2120   00112C  B481               	btfsc	129,2,c	;volatile
  2121   00112E  EF9B  F008         	goto	u391
  2122   001132  EF9D  F008         	goto	u390
  2123   001136                     u391:
  2124   001136  EF96  F008         	goto	l177
  2125   00113A                     u390:
  2126   00113A                     l1354:
  2127                           
  2128                           ;ASCENSOR.c: 210:     Lcd_NoBlink();
  2129   00113A  EC72  F009         	call	_Lcd_NoBlink	;wreg free
  2130   00113E  0012               	return		;funcret
  2131   001140                     __end_of_Modificar:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _Lcd_NoBlink *****************
  2135 ;; Defined at:
  2136 ;;		line 129 in file "lcd.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 7
  2157 ;; This function calls:
  2158 ;;		_Lcd_Cmd
  2159 ;; This function is called by:
  2160 ;;		_Modificar
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text11
  2165   0012E4                     __ptext11:
  2166                           	callstack 0
  2167   0012E4                     _Lcd_NoBlink:
  2168                           	callstack 22
  2169   0012E4                     
  2170                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  2171   0012E4  0E00               	movlw	0
  2172   0012E6  EC1B  F009         	call	_Lcd_Cmd
  2173                           
  2174                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  2175   0012EA  0E0C               	movlw	12
  2176   0012EC  EC1B  F009         	call	_Lcd_Cmd
  2177   0012F0  0012               	return		;funcret
  2178   0012F2                     __end_of_Lcd_NoBlink:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _Lcd_Write_String *****************
  2182 ;; Defined at:
  2183 ;;		line 104 in file "lcd.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  a               1   16[COMRAM] PTR const unsigned char 
  2186 ;;		 -> STR_3(6), STR_2(8), STR_1(7), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  i               2   18[COMRAM] int 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         1       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 7
  2205 ;; This function calls:
  2206 ;;		_Lcd_Write_Char
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text12
  2213   001140                     __ptext12:
  2214                           	callstack 0
  2215   001140                     _Lcd_Write_String:
  2216                           	callstack 23
  2217   001140                     
  2218                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2219   001140  0E00               	movlw	0
  2220   001142  6E14               	movwf	(Lcd_Write_String@i+1)^0,c
  2221   001144  0E00               	movlw	0
  2222   001146  6E13               	movwf	Lcd_Write_String@i^0,c
  2223   001148  EFB3  F008         	goto	l1954
  2224   00114C                     l1950:
  2225                           
  2226                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2227   00114C  5011               	movf	Lcd_Write_String@a^0,w,c
  2228   00114E  2413               	addwf	Lcd_Write_String@i^0,w,c
  2229   001150  6E12               	movwf	??_Lcd_Write_String^0,c
  2230   001152  C012  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2231   001156                     	if	1	;There is more than 1 active tblptr byte
  2232   001156  0E08               	movlw	high __smallconst
  2233   001158  6EF7               	movwf	tblptrh,c
  2234   00115A                     	endif
  2235   00115A                     	if	0	;tblptru may be non-zero
  2236   00115A                     	endif
  2237   00115A                     	if	0	;tblptru may be non-zero
  2238   00115A                     	endif
  2239   00115A  0008               	tblrd		*
  2240   00115C  50F5               	movf	tablat,w,c
  2241   00115E  ECE6  F008         	call	_Lcd_Write_Char
  2242   001162  4A13               	infsnz	Lcd_Write_String@i^0,f,c
  2243   001164  2A14               	incf	(Lcd_Write_String@i+1)^0,f,c
  2244   001166                     l1954:
  2245   001166  5011               	movf	Lcd_Write_String@a^0,w,c
  2246   001168  2413               	addwf	Lcd_Write_String@i^0,w,c
  2247   00116A  6E12               	movwf	??_Lcd_Write_String^0,c
  2248   00116C  C012  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2249   001170                     	if	1	;There is more than 1 active tblptr byte
  2250   001170  0E08               	movlw	high __smallconst
  2251   001172  6EF7               	movwf	tblptrh,c
  2252   001174                     	endif
  2253   001174                     	if	0	;tblptru may be non-zero
  2254   001174                     	endif
  2255   001174                     	if	0	;tblptru may be non-zero
  2256   001174                     	endif
  2257   001174  0008               	tblrd		*
  2258   001176  50F5               	movf	tablat,w,c
  2259   001178  0900               	iorlw	0
  2260   00117A  A4D8               	btfss	status,2,c
  2261   00117C  EFC2  F008         	goto	u1011
  2262   001180  EFC4  F008         	goto	u1010
  2263   001184                     u1011:
  2264   001184  EFA6  F008         	goto	l1950
  2265   001188                     u1010:
  2266   001188  0012               	return		;funcret
  2267   00118A                     __end_of_Lcd_Write_String:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _Lcd_Init *****************
  2271 ;; Defined at:
  2272 ;;		line 63 in file "lcd.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        1 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 8
  2293 ;; This function calls:
  2294 ;;		_Lcd_Clear
  2295 ;;		_Lcd_Cmd
  2296 ;;		_Lcd_Port
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text13
  2303   000E4E                     __ptext13:
  2304                           	callstack 0
  2305   000E4E                     _Lcd_Init:
  2306                           	callstack 22
  2307   000E4E                     
  2308                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  2309   000E4E  9495               	bcf	149,2,c	;volatile
  2310                           
  2311                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  2312   000E50  9695               	bcf	149,3,c	;volatile
  2313                           
  2314                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  2315   000E52  9895               	bcf	149,4,c	;volatile
  2316                           
  2317                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  2318   000E54  9A95               	bcf	149,5,c	;volatile
  2319                           
  2320                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  2321   000E56  9C95               	bcf	149,6,c	;volatile
  2322                           
  2323                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  2324   000E58  9E95               	bcf	149,7,c	;volatile
  2325   000E5A                     
  2326                           ;lcd.c: 71:     Lcd_Port(0x00);
  2327   000E5A  0E00               	movlw	0
  2328   000E5C  EC1D  F008         	call	_Lcd_Port
  2329   000E60                     
  2330                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2331   000E60  0E1A               	movlw	26
  2332   000E62  6E10               	movwf	??_Lcd_Init^0,c
  2333   000E64  0EF8               	movlw	248
  2334   000E66                     u1297:
  2335   000E66  2EE8               	decfsz	wreg,f,c
  2336   000E68  D7FE               	bra	u1297
  2337   000E6A  2E10               	decfsz	??_Lcd_Init^0,f,c
  2338   000E6C  D7FC               	bra	u1297
  2339   000E6E  D000               	nop2	
  2340   000E70                     
  2341                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  2342   000E70  0E03               	movlw	3
  2343   000E72  EC1B  F009         	call	_Lcd_Cmd
  2344   000E76                     
  2345                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2346   000E76  0E07               	movlw	7
  2347   000E78  6E10               	movwf	??_Lcd_Init^0,c
  2348   000E7A  0E7D               	movlw	125
  2349   000E7C                     u1307:
  2350   000E7C  2EE8               	decfsz	wreg,f,c
  2351   000E7E  D7FE               	bra	u1307
  2352   000E80  2E10               	decfsz	??_Lcd_Init^0,f,c
  2353   000E82  D7FC               	bra	u1307
  2354   000E84  0000               	nop	
  2355   000E86                     
  2356                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  2357   000E86  0E03               	movlw	3
  2358   000E88  EC1B  F009         	call	_Lcd_Cmd
  2359   000E8C                     
  2360                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2361   000E8C  0E0F               	movlw	15
  2362   000E8E  6E10               	movwf	??_Lcd_Init^0,c
  2363   000E90  0E48               	movlw	72
  2364   000E92                     u1317:
  2365   000E92  2EE8               	decfsz	wreg,f,c
  2366   000E94  D7FE               	bra	u1317
  2367   000E96  2E10               	decfsz	??_Lcd_Init^0,f,c
  2368   000E98  D7FC               	bra	u1317
  2369   000E9A                     
  2370                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  2371   000E9A  0E03               	movlw	3
  2372   000E9C  EC1B  F009         	call	_Lcd_Cmd
  2373   000EA0                     
  2374                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  2375   000EA0  0E02               	movlw	2
  2376   000EA2  EC1B  F009         	call	_Lcd_Cmd
  2377   000EA6                     
  2378                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  2379   000EA6  0E02               	movlw	2
  2380   000EA8  EC1B  F009         	call	_Lcd_Cmd
  2381   000EAC                     
  2382                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  2383   000EAC  0E08               	movlw	8
  2384   000EAE  EC1B  F009         	call	_Lcd_Cmd
  2385   000EB2                     
  2386                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  2387   000EB2  0E00               	movlw	0
  2388   000EB4  EC1B  F009         	call	_Lcd_Cmd
  2389   000EB8                     
  2390                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  2391   000EB8  0E0C               	movlw	12
  2392   000EBA  EC1B  F009         	call	_Lcd_Cmd
  2393   000EBE                     
  2394                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  2395   000EBE  0E00               	movlw	0
  2396   000EC0  EC1B  F009         	call	_Lcd_Cmd
  2397   000EC4                     
  2398                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  2399   000EC4  0E06               	movlw	6
  2400   000EC6  EC1B  F009         	call	_Lcd_Cmd
  2401   000ECA                     
  2402                           ;lcd.c: 85:     Lcd_Clear();
  2403   000ECA  EC79  F009         	call	_Lcd_Clear	;wreg free
  2404   000ECE  0012               	return		;funcret
  2405   000ED0                     __end_of_Lcd_Init:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _Lcd_Clear *****************
  2409 ;; Defined at:
  2410 ;;		line 20 in file "lcd.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 7
  2431 ;; This function calls:
  2432 ;;		_Lcd_Cmd
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;;		_Lcd_Init
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text14
  2440   0012F2                     __ptext14:
  2441                           	callstack 0
  2442   0012F2                     _Lcd_Clear:
  2443                           	callstack 22
  2444   0012F2                     
  2445                           ;lcd.c: 22:     Lcd_Cmd(0);
  2446   0012F2  0E00               	movlw	0
  2447   0012F4  EC1B  F009         	call	_Lcd_Cmd
  2448                           
  2449                           ;lcd.c: 23:     Lcd_Cmd(1);
  2450   0012F8  0E01               	movlw	1
  2451   0012FA  EC1B  F009         	call	_Lcd_Cmd
  2452   0012FE  0012               	return		;funcret
  2453   001300                     __end_of_Lcd_Clear:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _Lcd_CGRAM_Init *****************
  2457 ;; Defined at:
  2458 ;;		line 175 in file "lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 7
  2479 ;; This function calls:
  2480 ;;		_Lcd_Cmd
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text15
  2487   001300                     __ptext15:
  2488                           	callstack 0
  2489   001300                     _Lcd_CGRAM_Init:
  2490                           	callstack 23
  2491   001300                     
  2492                           ;lcd.c: 177:     Lcd_Cmd(0x04);
  2493   001300  0E04               	movlw	4
  2494   001302  EC1B  F009         	call	_Lcd_Cmd
  2495                           
  2496                           ;lcd.c: 178:     Lcd_Cmd(0x00);
  2497   001306  0E00               	movlw	0
  2498   001308  EC1B  F009         	call	_Lcd_Cmd
  2499   00130C  0012               	return		;funcret
  2500   00130E                     __end_of_Lcd_CGRAM_Init:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _Lcd_CGRAM_CreateChar *****************
  2504 ;; Defined at:
  2505 ;;		line 136 in file "lcd.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  add             1    wreg     unsigned char 
  2508 ;;  chardata        1   16[COMRAM] PTR const unsigned char 
  2509 ;;		 -> figura_2(8), figura_1(8), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  add             1   18[COMRAM] unsigned char 
  2512 ;;  i               1   26[COMRAM] unsigned char 
  2513 ;;  i               1   25[COMRAM] unsigned char 
  2514 ;;  i               1   24[COMRAM] unsigned char 
  2515 ;;  i               1   23[COMRAM] unsigned char 
  2516 ;;  i               1   22[COMRAM] unsigned char 
  2517 ;;  i               1   21[COMRAM] unsigned char 
  2518 ;;  i               1   20[COMRAM] unsigned char 
  2519 ;;  i               1   19[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         1       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2532 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:       11 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 7
  2536 ;; This function calls:
  2537 ;;		_Lcd_Write_Char
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text16
  2544   000828                     __ptext16:
  2545                           	callstack 0
  2546   000828                     _Lcd_CGRAM_CreateChar:
  2547                           	callstack 23
  2548                           
  2549                           ;incstack = 0
  2550                           ;Lcd_CGRAM_CreateChar@add stored from wreg
  2551   000828  6E13               	movwf	Lcd_CGRAM_CreateChar@add^0,c
  2552   00082A                     
  2553                           ;lcd.c: 136: void Lcd_CGRAM_CreateChar(char add, const char* chardata);lcd.c: 137: {;lcd
      +                          .c: 138:     switch(add)
  2554   00082A  EFE4  F004         	goto	l1946
  2555   00082E                     l281:
  2556                           
  2557                           ;lcd.c: 141:             for(char i=0; i<=7; i++)
  2558   00082E  6A14               	clrf	Lcd_CGRAM_CreateChar@i^0,c
  2559   000830                     l1854:
  2560                           
  2561                           ;lcd.c: 142:                 Lcd_Write_Char(chardata[i]);
  2562   000830  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2563   000832  2414               	addwf	Lcd_CGRAM_CreateChar@i^0,w,c
  2564   000834  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2565   000836  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2566   00083A                     	if	1	;There is more than 1 active tblptr byte
  2567   00083A  0E08               	movlw	high __smallconst
  2568   00083C  6EF7               	movwf	tblptrh,c
  2569   00083E                     	endif
  2570   00083E                     	if	0	;tblptru may be non-zero
  2571   00083E                     	endif
  2572   00083E                     	if	0	;tblptru may be non-zero
  2573   00083E                     	endif
  2574   00083E  0008               	tblrd		*
  2575   000840  50F5               	movf	tablat,w,c
  2576   000842  ECE6  F008         	call	_Lcd_Write_Char
  2577   000846  2A14               	incf	Lcd_CGRAM_CreateChar@i^0,f,c
  2578   000848  0E07               	movlw	7
  2579   00084A  6414               	cpfsgt	Lcd_CGRAM_CreateChar@i^0,c
  2580   00084C  EF2A  F004         	goto	u931
  2581   000850  EF2C  F004         	goto	u930
  2582   000854                     u931:
  2583   000854  EF18  F004         	goto	l1854
  2584   000858                     u930:
  2585   000858  EF07  F005         	goto	l306
  2586   00085C                     l1860:
  2587                           
  2588                           ;lcd.c: 145:             for(char i=8; i<=15; i++)
  2589   00085C  0E08               	movlw	8
  2590   00085E  6E15               	movwf	Lcd_CGRAM_CreateChar@i_872^0,c
  2591   000860                     l1866:
  2592                           
  2593                           ;lcd.c: 146:                 Lcd_Write_Char(chardata[i-8]);
  2594   000860  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2595   000862  2415               	addwf	Lcd_CGRAM_CreateChar@i_872^0,w,c
  2596   000864  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2597   000866  0EF8               	movlw	-8
  2598   000868  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2599   00086A  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2600   00086E                     	if	1	;There is more than 1 active tblptr byte
  2601   00086E  0E08               	movlw	high __smallconst
  2602   000870  6EF7               	movwf	tblptrh,c
  2603   000872                     	endif
  2604   000872                     	if	0	;tblptru may be non-zero
  2605   000872                     	endif
  2606   000872                     	if	0	;tblptru may be non-zero
  2607   000872                     	endif
  2608   000872  0008               	tblrd		*
  2609   000874  50F5               	movf	tablat,w,c
  2610   000876  ECE6  F008         	call	_Lcd_Write_Char
  2611   00087A  2A15               	incf	Lcd_CGRAM_CreateChar@i_872^0,f,c
  2612   00087C  0E0F               	movlw	15
  2613   00087E  6415               	cpfsgt	Lcd_CGRAM_CreateChar@i_872^0,c
  2614   000880  EF44  F004         	goto	u941
  2615   000884  EF46  F004         	goto	u940
  2616   000888                     u941:
  2617   000888  EF30  F004         	goto	l1866
  2618   00088C                     u940:
  2619   00088C  EF07  F005         	goto	l306
  2620   000890                     l1872:
  2621                           
  2622                           ;lcd.c: 149:             for(char i=16; i<=23; i++)
  2623   000890  0E10               	movlw	16
  2624   000892  6E16               	movwf	Lcd_CGRAM_CreateChar@i_873^0,c
  2625   000894                     l1878:
  2626                           
  2627                           ;lcd.c: 150:                 Lcd_Write_Char(chardata[i-16]);
  2628   000894  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2629   000896  2416               	addwf	Lcd_CGRAM_CreateChar@i_873^0,w,c
  2630   000898  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2631   00089A  0EF0               	movlw	-16
  2632   00089C  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2633   00089E  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2634   0008A2                     	if	1	;There is more than 1 active tblptr byte
  2635   0008A2  0E08               	movlw	high __smallconst
  2636   0008A4  6EF7               	movwf	tblptrh,c
  2637   0008A6                     	endif
  2638   0008A6                     	if	0	;tblptru may be non-zero
  2639   0008A6                     	endif
  2640   0008A6                     	if	0	;tblptru may be non-zero
  2641   0008A6                     	endif
  2642   0008A6  0008               	tblrd		*
  2643   0008A8  50F5               	movf	tablat,w,c
  2644   0008AA  ECE6  F008         	call	_Lcd_Write_Char
  2645   0008AE  2A16               	incf	Lcd_CGRAM_CreateChar@i_873^0,f,c
  2646   0008B0  0E17               	movlw	23
  2647   0008B2  6416               	cpfsgt	Lcd_CGRAM_CreateChar@i_873^0,c
  2648   0008B4  EF5E  F004         	goto	u951
  2649   0008B8  EF60  F004         	goto	u950
  2650   0008BC                     u951:
  2651   0008BC  EF4A  F004         	goto	l1878
  2652   0008C0                     u950:
  2653   0008C0  EF07  F005         	goto	l306
  2654   0008C4                     l1884:
  2655                           
  2656                           ;lcd.c: 153:             for(char i=24; i<=31; i++)
  2657   0008C4  0E18               	movlw	24
  2658   0008C6  6E17               	movwf	Lcd_CGRAM_CreateChar@i_874^0,c
  2659   0008C8                     l1890:
  2660                           
  2661                           ;lcd.c: 154:                 Lcd_Write_Char(chardata[i-24]);
  2662   0008C8  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2663   0008CA  2417               	addwf	Lcd_CGRAM_CreateChar@i_874^0,w,c
  2664   0008CC  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2665   0008CE  0EE8               	movlw	-24
  2666   0008D0  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2667   0008D2  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2668   0008D6                     	if	1	;There is more than 1 active tblptr byte
  2669   0008D6  0E08               	movlw	high __smallconst
  2670   0008D8  6EF7               	movwf	tblptrh,c
  2671   0008DA                     	endif
  2672   0008DA                     	if	0	;tblptru may be non-zero
  2673   0008DA                     	endif
  2674   0008DA                     	if	0	;tblptru may be non-zero
  2675   0008DA                     	endif
  2676   0008DA  0008               	tblrd		*
  2677   0008DC  50F5               	movf	tablat,w,c
  2678   0008DE  ECE6  F008         	call	_Lcd_Write_Char
  2679   0008E2  2A17               	incf	Lcd_CGRAM_CreateChar@i_874^0,f,c
  2680   0008E4  0E1F               	movlw	31
  2681   0008E6  6417               	cpfsgt	Lcd_CGRAM_CreateChar@i_874^0,c
  2682   0008E8  EF78  F004         	goto	u961
  2683   0008EC  EF7A  F004         	goto	u960
  2684   0008F0                     u961:
  2685   0008F0  EF64  F004         	goto	l1890
  2686   0008F4                     u960:
  2687   0008F4  EF07  F005         	goto	l306
  2688   0008F8                     l1896:
  2689                           
  2690                           ;lcd.c: 157:             for(char i=32; i<=39; i++)
  2691   0008F8  0E20               	movlw	32
  2692   0008FA  6E18               	movwf	Lcd_CGRAM_CreateChar@i_875^0,c
  2693   0008FC                     l1902:
  2694                           
  2695                           ;lcd.c: 158:                 Lcd_Write_Char(chardata[i-32]);
  2696   0008FC  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2697   0008FE  2418               	addwf	Lcd_CGRAM_CreateChar@i_875^0,w,c
  2698   000900  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2699   000902  0EE0               	movlw	-32
  2700   000904  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2701   000906  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2702   00090A                     	if	1	;There is more than 1 active tblptr byte
  2703   00090A  0E08               	movlw	high __smallconst
  2704   00090C  6EF7               	movwf	tblptrh,c
  2705   00090E                     	endif
  2706   00090E                     	if	0	;tblptru may be non-zero
  2707   00090E                     	endif
  2708   00090E                     	if	0	;tblptru may be non-zero
  2709   00090E                     	endif
  2710   00090E  0008               	tblrd		*
  2711   000910  50F5               	movf	tablat,w,c
  2712   000912  ECE6  F008         	call	_Lcd_Write_Char
  2713   000916  2A18               	incf	Lcd_CGRAM_CreateChar@i_875^0,f,c
  2714   000918  0E27               	movlw	39
  2715   00091A  6418               	cpfsgt	Lcd_CGRAM_CreateChar@i_875^0,c
  2716   00091C  EF92  F004         	goto	u971
  2717   000920  EF94  F004         	goto	u970
  2718   000924                     u971:
  2719   000924  EF7E  F004         	goto	l1902
  2720   000928                     u970:
  2721   000928  EF07  F005         	goto	l306
  2722   00092C                     l1908:
  2723                           
  2724                           ;lcd.c: 161:             for(char i=40; i<=47; i++)
  2725   00092C  0E28               	movlw	40
  2726   00092E  6E19               	movwf	Lcd_CGRAM_CreateChar@i_876^0,c
  2727   000930                     l1914:
  2728                           
  2729                           ;lcd.c: 162:                 Lcd_Write_Char(chardata[i-40]);
  2730   000930  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2731   000932  2419               	addwf	Lcd_CGRAM_CreateChar@i_876^0,w,c
  2732   000934  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2733   000936  0ED8               	movlw	-40
  2734   000938  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2735   00093A  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2736   00093E                     	if	1	;There is more than 1 active tblptr byte
  2737   00093E  0E08               	movlw	high __smallconst
  2738   000940  6EF7               	movwf	tblptrh,c
  2739   000942                     	endif
  2740   000942                     	if	0	;tblptru may be non-zero
  2741   000942                     	endif
  2742   000942                     	if	0	;tblptru may be non-zero
  2743   000942                     	endif
  2744   000942  0008               	tblrd		*
  2745   000944  50F5               	movf	tablat,w,c
  2746   000946  ECE6  F008         	call	_Lcd_Write_Char
  2747   00094A  2A19               	incf	Lcd_CGRAM_CreateChar@i_876^0,f,c
  2748   00094C  0E2F               	movlw	47
  2749   00094E  6419               	cpfsgt	Lcd_CGRAM_CreateChar@i_876^0,c
  2750   000950  EFAC  F004         	goto	u981
  2751   000954  EFAE  F004         	goto	u980
  2752   000958                     u981:
  2753   000958  EF98  F004         	goto	l1914
  2754   00095C                     u980:
  2755   00095C  EF07  F005         	goto	l306
  2756   000960                     l1920:
  2757                           
  2758                           ;lcd.c: 165:             for(char i=48; i<=55; i++)
  2759   000960  0E30               	movlw	48
  2760   000962  6E1A               	movwf	Lcd_CGRAM_CreateChar@i_877^0,c
  2761   000964                     l1926:
  2762                           
  2763                           ;lcd.c: 166:                 Lcd_Write_Char(chardata[i-48]);
  2764   000964  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2765   000966  241A               	addwf	Lcd_CGRAM_CreateChar@i_877^0,w,c
  2766   000968  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2767   00096A  0ED0               	movlw	-48
  2768   00096C  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2769   00096E  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2770   000972                     	if	1	;There is more than 1 active tblptr byte
  2771   000972  0E08               	movlw	high __smallconst
  2772   000974  6EF7               	movwf	tblptrh,c
  2773   000976                     	endif
  2774   000976                     	if	0	;tblptru may be non-zero
  2775   000976                     	endif
  2776   000976                     	if	0	;tblptru may be non-zero
  2777   000976                     	endif
  2778   000976  0008               	tblrd		*
  2779   000978  50F5               	movf	tablat,w,c
  2780   00097A  ECE6  F008         	call	_Lcd_Write_Char
  2781   00097E  2A1A               	incf	Lcd_CGRAM_CreateChar@i_877^0,f,c
  2782   000980  0E37               	movlw	55
  2783   000982  641A               	cpfsgt	Lcd_CGRAM_CreateChar@i_877^0,c
  2784   000984  EFC6  F004         	goto	u991
  2785   000988  EFC8  F004         	goto	u990
  2786   00098C                     u991:
  2787   00098C  EFB2  F004         	goto	l1926
  2788   000990                     u990:
  2789   000990  EF07  F005         	goto	l306
  2790   000994                     l1932:
  2791                           
  2792                           ;lcd.c: 169:             for(char i=56; i<=63; i++)
  2793   000994  0E38               	movlw	56
  2794   000996  6E1B               	movwf	Lcd_CGRAM_CreateChar@i_878^0,c
  2795   000998                     l1938:
  2796                           
  2797                           ;lcd.c: 170:                 Lcd_Write_Char(chardata[i-56]);
  2798   000998  5011               	movf	Lcd_CGRAM_CreateChar@chardata^0,w,c
  2799   00099A  241B               	addwf	Lcd_CGRAM_CreateChar@i_878^0,w,c
  2800   00099C  6E12               	movwf	??_Lcd_CGRAM_CreateChar^0,c
  2801   00099E  0EC8               	movlw	-56
  2802   0009A0  2612               	addwf	??_Lcd_CGRAM_CreateChar^0,f,c
  2803   0009A2  C012  FFF6         	movff	??_Lcd_CGRAM_CreateChar,tblptrl
  2804   0009A6                     	if	1	;There is more than 1 active tblptr byte
  2805   0009A6  0E08               	movlw	high __smallconst
  2806   0009A8  6EF7               	movwf	tblptrh,c
  2807   0009AA                     	endif
  2808   0009AA                     	if	0	;tblptru may be non-zero
  2809   0009AA                     	endif
  2810   0009AA                     	if	0	;tblptru may be non-zero
  2811   0009AA                     	endif
  2812   0009AA  0008               	tblrd		*
  2813   0009AC  50F5               	movf	tablat,w,c
  2814   0009AE  ECE6  F008         	call	_Lcd_Write_Char
  2815   0009B2  2A1B               	incf	Lcd_CGRAM_CreateChar@i_878^0,f,c
  2816   0009B4  0E3F               	movlw	63
  2817   0009B6  641B               	cpfsgt	Lcd_CGRAM_CreateChar@i_878^0,c
  2818   0009B8  EFE0  F004         	goto	u1001
  2819   0009BC  EFE2  F004         	goto	u1000
  2820   0009C0                     u1001:
  2821   0009C0  EFCC  F004         	goto	l1938
  2822   0009C4                     u1000:
  2823   0009C4  EF07  F005         	goto	l306
  2824   0009C8                     l1946:
  2825   0009C8  5013               	movf	Lcd_CGRAM_CreateChar@add^0,w,c
  2826                           
  2827                           ; Switch size 1, requested type "simple"
  2828                           ; Number of cases is 8, Range of values is 0 to 7
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte           25    13 (average)
  2832                           ;	Chosen strategy is simple_byte
  2833   0009CA  0A00               	xorlw	0	; case 0
  2834   0009CC  B4D8               	btfsc	status,2,c
  2835   0009CE  EF17  F004         	goto	l281
  2836   0009D2  0A01               	xorlw	1	; case 1
  2837   0009D4  B4D8               	btfsc	status,2,c
  2838   0009D6  EF2E  F004         	goto	l1860
  2839   0009DA  0A03               	xorlw	3	; case 2
  2840   0009DC  B4D8               	btfsc	status,2,c
  2841   0009DE  EF48  F004         	goto	l1872
  2842   0009E2  0A01               	xorlw	1	; case 3
  2843   0009E4  B4D8               	btfsc	status,2,c
  2844   0009E6  EF62  F004         	goto	l1884
  2845   0009EA  0A07               	xorlw	7	; case 4
  2846   0009EC  B4D8               	btfsc	status,2,c
  2847   0009EE  EF7C  F004         	goto	l1896
  2848   0009F2  0A01               	xorlw	1	; case 5
  2849   0009F4  B4D8               	btfsc	status,2,c
  2850   0009F6  EF96  F004         	goto	l1908
  2851   0009FA  0A03               	xorlw	3	; case 6
  2852   0009FC  B4D8               	btfsc	status,2,c
  2853   0009FE  EFB0  F004         	goto	l1920
  2854   000A02  0A01               	xorlw	1	; case 7
  2855   000A04  B4D8               	btfsc	status,2,c
  2856   000A06  EFCA  F004         	goto	l1932
  2857   000A0A  EF07  F005         	goto	l306
  2858   000A0E                     l306:
  2859   000A0E  0012               	return		;funcret
  2860   000A10                     __end_of_Lcd_CGRAM_CreateChar:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _Lcd_CGRAM_Close *****************
  2864 ;; Defined at:
  2865 ;;		line 181 in file "lcd.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 7
  2886 ;; This function calls:
  2887 ;;		_Lcd_Cmd
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text17
  2894   00130E                     __ptext17:
  2895                           	callstack 0
  2896   00130E                     _Lcd_CGRAM_Close:
  2897                           	callstack 23
  2898   00130E                     
  2899                           ;lcd.c: 183:     Lcd_Cmd(0x00);
  2900   00130E  0E00               	movlw	0
  2901   001310  EC1B  F009         	call	_Lcd_Cmd
  2902                           
  2903                           ;lcd.c: 184:     Lcd_Cmd(0x02);
  2904   001314  0E02               	movlw	2
  2905   001316  EC1B  F009         	call	_Lcd_Cmd
  2906   00131A  0012               	return		;funcret
  2907   00131C                     __end_of_Lcd_CGRAM_Close:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _Actualizar_Matriz *****************
  2911 ;; Defined at:
  2912 ;;		line 104 in file "ASCENSOR.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  i               1   22[COMRAM] unsigned char 
  2917 ;;  i               1   21[COMRAM] unsigned char 
  2918 ;;  i               1   20[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2931 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        3 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 8
  2935 ;; This function calls:
  2936 ;;		_Lcd_Set_Cursor
  2937 ;;		_Lcd_Write_Char
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text18
  2944   000B36                     __ptext18:
  2945                           	callstack 0
  2946   000B36                     _Actualizar_Matriz:
  2947                           	callstack 22
  2948   000B36                     
  2949                           ;ASCENSOR.c: 105:     Lcd_Set_Cursor(1,12);
  2950   000B36  0E0C               	movlw	12
  2951   000B38  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  2952   000B3A  0E01               	movlw	1
  2953   000B3C  EC0E  F006         	call	_Lcd_Set_Cursor
  2954   000B40                     
  2955                           ;ASCENSOR.c: 106:     for(char i=0;i<=3;i++){
  2956   000B40  6A15               	clrf	Actualizar_Matriz@i^0,c
  2957   000B42                     l1772:
  2958                           
  2959                           ;ASCENSOR.c: 107:         if (Fila1[i]==0){
  2960   000B42  5015               	movf	Actualizar_Matriz@i^0,w,c
  2961   000B44  0F26               	addlw	low _Fila1
  2962   000B46  6ED9               	movwf	fsr2l,c
  2963   000B48  6ADA               	clrf	fsr2h,c
  2964   000B4A  50DF               	movf	indf2,w,c
  2965   000B4C  A4D8               	btfss	status,2,c
  2966   000B4E  EFAB  F005         	goto	u851
  2967   000B52  EFAD  F005         	goto	u850
  2968   000B56                     u851:
  2969   000B56  EFB2  F005         	goto	l1776
  2970   000B5A                     u850:
  2971   000B5A                     
  2972                           ;ASCENSOR.c: 108:             Lcd_Write_Char(0);
  2973   000B5A  0E00               	movlw	0
  2974   000B5C  ECE6  F008         	call	_Lcd_Write_Char
  2975                           
  2976                           ;ASCENSOR.c: 109:         }
  2977   000B60  EFB5  F005         	goto	l1778
  2978   000B64                     l1776:
  2979                           
  2980                           ;ASCENSOR.c: 111:         {;ASCENSOR.c: 112:             Lcd_Write_Char(1);
  2981   000B64  0E01               	movlw	1
  2982   000B66  ECE6  F008         	call	_Lcd_Write_Char
  2983   000B6A                     l1778:
  2984                           
  2985                           ;ASCENSOR.c: 114:     }
  2986   000B6A  2A15               	incf	Actualizar_Matriz@i^0,f,c
  2987   000B6C  0E03               	movlw	3
  2988   000B6E  6415               	cpfsgt	Actualizar_Matriz@i^0,c
  2989   000B70  EFBC  F005         	goto	u861
  2990   000B74  EFBE  F005         	goto	u860
  2991   000B78                     u861:
  2992   000B78  EFA1  F005         	goto	l1772
  2993   000B7C                     u860:
  2994   000B7C                     
  2995                           ;ASCENSOR.c: 115:     Lcd_Set_Cursor(2,12);
  2996   000B7C  0E0C               	movlw	12
  2997   000B7E  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  2998   000B80  0E02               	movlw	2
  2999   000B82  EC0E  F006         	call	_Lcd_Set_Cursor
  3000   000B86                     
  3001                           ;ASCENSOR.c: 116:     for(char i=0;i<=3;i++){
  3002   000B86  6A16               	clrf	Actualizar_Matriz@i_682^0,c
  3003   000B88                     l1790:
  3004                           
  3005                           ;ASCENSOR.c: 117:         if (Fila2[i]==0){
  3006   000B88  5016               	movf	Actualizar_Matriz@i_682^0,w,c
  3007   000B8A  0F22               	addlw	low _Fila2
  3008   000B8C  6ED9               	movwf	fsr2l,c
  3009   000B8E  6ADA               	clrf	fsr2h,c
  3010   000B90  50DF               	movf	indf2,w,c
  3011   000B92  A4D8               	btfss	status,2,c
  3012   000B94  EFCE  F005         	goto	u871
  3013   000B98  EFD0  F005         	goto	u870
  3014   000B9C                     u871:
  3015   000B9C  EFD5  F005         	goto	l1794
  3016   000BA0                     u870:
  3017   000BA0                     
  3018                           ;ASCENSOR.c: 118:             Lcd_Write_Char(0);
  3019   000BA0  0E00               	movlw	0
  3020   000BA2  ECE6  F008         	call	_Lcd_Write_Char
  3021                           
  3022                           ;ASCENSOR.c: 119:         }
  3023   000BA6  EFD8  F005         	goto	l1796
  3024   000BAA                     l1794:
  3025                           
  3026                           ;ASCENSOR.c: 121:         {;ASCENSOR.c: 122:             Lcd_Write_Char(1);
  3027   000BAA  0E01               	movlw	1
  3028   000BAC  ECE6  F008         	call	_Lcd_Write_Char
  3029   000BB0                     l1796:
  3030                           
  3031                           ;ASCENSOR.c: 124:     }
  3032   000BB0  2A16               	incf	Actualizar_Matriz@i_682^0,f,c
  3033   000BB2  0E03               	movlw	3
  3034   000BB4  6416               	cpfsgt	Actualizar_Matriz@i_682^0,c
  3035   000BB6  EFDF  F005         	goto	u881
  3036   000BBA  EFE1  F005         	goto	u880
  3037   000BBE                     u881:
  3038   000BBE  EFC4  F005         	goto	l1790
  3039   000BC2                     u880:
  3040   000BC2                     
  3041                           ;ASCENSOR.c: 125:     Lcd_Set_Cursor(3,12);
  3042   000BC2  0E0C               	movlw	12
  3043   000BC4  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  3044   000BC6  0E03               	movlw	3
  3045   000BC8  EC0E  F006         	call	_Lcd_Set_Cursor
  3046   000BCC                     
  3047                           ;ASCENSOR.c: 126:     for(char i=0;i<=3;i++){
  3048   000BCC  6A17               	clrf	Actualizar_Matriz@i_683^0,c
  3049   000BCE                     l1808:
  3050                           
  3051                           ;ASCENSOR.c: 127:         if (Fila3[i]==0){
  3052   000BCE  5017               	movf	Actualizar_Matriz@i_683^0,w,c
  3053   000BD0  0F1E               	addlw	low _Fila3
  3054   000BD2  6ED9               	movwf	fsr2l,c
  3055   000BD4  6ADA               	clrf	fsr2h,c
  3056   000BD6  50DF               	movf	indf2,w,c
  3057   000BD8  A4D8               	btfss	status,2,c
  3058   000BDA  EFF1  F005         	goto	u891
  3059   000BDE  EFF3  F005         	goto	u890
  3060   000BE2                     u891:
  3061   000BE2  EFF8  F005         	goto	l1812
  3062   000BE6                     u890:
  3063   000BE6                     
  3064                           ;ASCENSOR.c: 128:             Lcd_Write_Char(0);
  3065   000BE6  0E00               	movlw	0
  3066   000BE8  ECE6  F008         	call	_Lcd_Write_Char
  3067                           
  3068                           ;ASCENSOR.c: 129:         }
  3069   000BEC  EFFB  F005         	goto	l1814
  3070   000BF0                     l1812:
  3071                           
  3072                           ;ASCENSOR.c: 131:         {;ASCENSOR.c: 132:             Lcd_Write_Char(1);
  3073   000BF0  0E01               	movlw	1
  3074   000BF2  ECE6  F008         	call	_Lcd_Write_Char
  3075   000BF6                     l1814:
  3076                           
  3077                           ;ASCENSOR.c: 134:     }
  3078   000BF6  2A17               	incf	Actualizar_Matriz@i_683^0,f,c
  3079   000BF8  0E03               	movlw	3
  3080   000BFA  6417               	cpfsgt	Actualizar_Matriz@i_683^0,c
  3081   000BFC  EF02  F006         	goto	u901
  3082   000C00  EF04  F006         	goto	u900
  3083   000C04                     u901:
  3084   000C04  EFE7  F005         	goto	l1808
  3085   000C08                     u900:
  3086   000C08                     
  3087                           ;ASCENSOR.c: 135:     Lcd_Set_Cursor(1,12);
  3088   000C08  0E0C               	movlw	12
  3089   000C0A  6E10               	movwf	Lcd_Set_Cursor@b^0,c
  3090   000C0C  0E01               	movlw	1
  3091   000C0E  EC0E  F006         	call	_Lcd_Set_Cursor
  3092   000C12                     
  3093                           ;ASCENSOR.c: 136:     f=1;
  3094   000C12  0E01               	movlw	1
  3095   000C14  6E2B               	movwf	_f^0,c
  3096   000C16                     
  3097                           ;ASCENSOR.c: 137:     c=12;
  3098   000C16  0E0C               	movlw	12
  3099   000C18  6E2A               	movwf	_c^0,c
  3100   000C1A  0012               	return		;funcret
  3101   000C1C                     __end_of_Actualizar_Matriz:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _Lcd_Write_Char *****************
  3105 ;; Defined at:
  3106 ;;		line 88 in file "lcd.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  a               1    wreg     unsigned char 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  a               1   15[COMRAM] unsigned char 
  3111 ;;  y               1   14[COMRAM] unsigned char 
  3112 ;;  temp            1   13[COMRAM] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0
  3123 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3125 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3126 ;;Total ram usage:        3 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 6
  3129 ;; This function calls:
  3130 ;;		_Lcd_Port
  3131 ;; This function is called by:
  3132 ;;		_Actualizar_Matriz
  3133 ;;		_Modificar
  3134 ;;		_main
  3135 ;;		_Lcd_Write_String
  3136 ;;		_Lcd_CGRAM_CreateChar
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text19
  3141   0011CC                     __ptext19:
  3142                           	callstack 0
  3143   0011CC                     _Lcd_Write_Char:
  3144                           	callstack 23
  3145                           
  3146                           ;incstack = 0
  3147                           ;Lcd_Write_Char@a stored from wreg
  3148   0011CC  6E10               	movwf	Lcd_Write_Char@a^0,c
  3149   0011CE                     
  3150                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  3151   0011CE  5010               	movf	Lcd_Write_Char@a^0,w,c
  3152   0011D0  0B0F               	andlw	15
  3153   0011D2  6E0E               	movwf	Lcd_Write_Char@temp^0,c
  3154                           
  3155                           ;lcd.c: 92:     y = a&0xF0;
  3156   0011D4  5010               	movf	Lcd_Write_Char@a^0,w,c
  3157   0011D6  0BF0               	andlw	240
  3158   0011D8  6E0F               	movwf	Lcd_Write_Char@y^0,c
  3159   0011DA                     
  3160                           ;lcd.c: 93:     LATEbits.LE0 = 1;
  3161   0011DA  808D               	bsf	141,0,c	;volatile
  3162   0011DC                     
  3163                           ;lcd.c: 94:     Lcd_Port(y>>4);
  3164   0011DC  380F               	swapf	Lcd_Write_Char@y^0,w,c
  3165   0011DE  0B0F               	andlw	15
  3166   0011E0  EC1D  F008         	call	_Lcd_Port
  3167   0011E4                     
  3168                           ;lcd.c: 95:     LATEbits.LE1 = 1;
  3169   0011E4  828D               	bsf	141,1,c	;volatile
  3170   0011E6                     
  3171                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3172   0011E6  0E0D               	movlw	13
  3173   0011E8                     u1327:
  3174   0011E8  2EE8               	decfsz	wreg,f,c
  3175   0011EA  D7FE               	bra	u1327
  3176   0011EC  0000               	nop	
  3177   0011EE                     
  3178                           ;lcd.c: 97:     LATEbits.LE1 = 0;
  3179   0011EE  928D               	bcf	141,1,c	;volatile
  3180   0011F0                     
  3181                           ;lcd.c: 98:     Lcd_Port(temp);
  3182   0011F0  500E               	movf	Lcd_Write_Char@temp^0,w,c
  3183   0011F2  EC1D  F008         	call	_Lcd_Port
  3184   0011F6                     
  3185                           ;lcd.c: 99:     LATEbits.LE1 = 1;
  3186   0011F6  828D               	bsf	141,1,c	;volatile
  3187   0011F8                     
  3188                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3189   0011F8  0E0D               	movlw	13
  3190   0011FA                     u1337:
  3191   0011FA  2EE8               	decfsz	wreg,f,c
  3192   0011FC  D7FE               	bra	u1337
  3193   0011FE  0000               	nop	
  3194   001200                     
  3195                           ;lcd.c: 101:     LATEbits.LE1 = 0;
  3196   001200  928D               	bcf	141,1,c	;volatile
  3197   001202  0012               	return		;funcret
  3198   001204                     __end_of_Lcd_Write_Char:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _Lcd_Set_Cursor *****************
  3202 ;; Defined at:
  3203 ;;		line 26 in file "lcd.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  a               1    wreg     unsigned char 
  3206 ;;  b               1   15[COMRAM] unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  a               1   16[COMRAM] unsigned char 
  3209 ;;  temp            1   19[COMRAM] unsigned char 
  3210 ;;  y               1   18[COMRAM] unsigned char 
  3211 ;;  z               1   17[COMRAM] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3221 ;;      Params:         1       0       0       0       0       0       0       0       0
  3222 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3224 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3225 ;;Total ram usage:        5 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 7
  3228 ;; This function calls:
  3229 ;;		_Lcd_Cmd
  3230 ;; This function is called by:
  3231 ;;		_Actualizar_Matriz
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text20
  3237   000C1C                     __ptext20:
  3238                           	callstack 0
  3239   000C1C                     _Lcd_Set_Cursor:
  3240                           	callstack 23
  3241                           
  3242                           ;incstack = 0
  3243                           ;Lcd_Set_Cursor@a stored from wreg
  3244   000C1C  6E11               	movwf	Lcd_Set_Cursor@a^0,c
  3245   000C1E                     
  3246                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3247   000C1E  0411               	decf	Lcd_Set_Cursor@a^0,w,c
  3248   000C20  A4D8               	btfss	status,2,c
  3249   000C22  EF15  F006         	goto	u781
  3250   000C26  EF17  F006         	goto	u780
  3251   000C2A                     u781:
  3252   000C2A  EF28  F006         	goto	l1698
  3253   000C2E                     u780:
  3254   000C2E                     
  3255                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3256   000C2E  5010               	movf	Lcd_Set_Cursor@b^0,w,c
  3257   000C30  0F7F               	addlw	127
  3258   000C32  6E14               	movwf	Lcd_Set_Cursor@temp^0,c
  3259                           
  3260                           ;lcd.c: 32:         z = temp>>4;
  3261   000C34  3814               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3262   000C36  0B0F               	andlw	15
  3263   000C38  6E12               	movwf	Lcd_Set_Cursor@z^0,c
  3264                           
  3265                           ;lcd.c: 33:         y = temp & 0x0F;
  3266   000C3A  5014               	movf	Lcd_Set_Cursor@temp^0,w,c
  3267   000C3C  0B0F               	andlw	15
  3268   000C3E  6E13               	movwf	Lcd_Set_Cursor@y^0,c
  3269   000C40                     
  3270                           ;lcd.c: 34:         Lcd_Cmd(z);
  3271   000C40  5012               	movf	Lcd_Set_Cursor@z^0,w,c
  3272   000C42  EC1B  F009         	call	_Lcd_Cmd
  3273   000C46                     
  3274                           ;lcd.c: 35:         Lcd_Cmd(y);
  3275   000C46  5013               	movf	Lcd_Set_Cursor@y^0,w,c
  3276   000C48  EC1B  F009         	call	_Lcd_Cmd
  3277                           
  3278                           ;lcd.c: 36:     }
  3279   000C4C  EF76  F006         	goto	l253
  3280   000C50                     l1698:
  3281   000C50  0E02               	movlw	2
  3282   000C52  1811               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3283   000C54  A4D8               	btfss	status,2,c
  3284   000C56  EF2F  F006         	goto	u791
  3285   000C5A  EF31  F006         	goto	u790
  3286   000C5E                     u791:
  3287   000C5E  EF42  F006         	goto	l1706
  3288   000C62                     u790:
  3289   000C62                     
  3290                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3291   000C62  5010               	movf	Lcd_Set_Cursor@b^0,w,c
  3292   000C64  0FBF               	addlw	191
  3293   000C66  6E14               	movwf	Lcd_Set_Cursor@temp^0,c
  3294                           
  3295                           ;lcd.c: 40:         z = temp>>4;
  3296   000C68  3814               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3297   000C6A  0B0F               	andlw	15
  3298   000C6C  6E12               	movwf	Lcd_Set_Cursor@z^0,c
  3299                           
  3300                           ;lcd.c: 41:         y = temp & 0x0F;
  3301   000C6E  5014               	movf	Lcd_Set_Cursor@temp^0,w,c
  3302   000C70  0B0F               	andlw	15
  3303   000C72  6E13               	movwf	Lcd_Set_Cursor@y^0,c
  3304   000C74                     
  3305                           ;lcd.c: 42:         Lcd_Cmd(z);
  3306   000C74  5012               	movf	Lcd_Set_Cursor@z^0,w,c
  3307   000C76  EC1B  F009         	call	_Lcd_Cmd
  3308   000C7A                     
  3309                           ;lcd.c: 43:         Lcd_Cmd(y);
  3310   000C7A  5013               	movf	Lcd_Set_Cursor@y^0,w,c
  3311   000C7C  EC1B  F009         	call	_Lcd_Cmd
  3312                           
  3313                           ;lcd.c: 44:     }
  3314   000C80  EF76  F006         	goto	l253
  3315   000C84                     l1706:
  3316   000C84  0E03               	movlw	3
  3317   000C86  1811               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3318   000C88  A4D8               	btfss	status,2,c
  3319   000C8A  EF49  F006         	goto	u801
  3320   000C8E  EF4B  F006         	goto	u800
  3321   000C92                     u801:
  3322   000C92  EF5C  F006         	goto	l1714
  3323   000C96                     u800:
  3324   000C96                     
  3325                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x90 + b - 1;
  3326   000C96  5010               	movf	Lcd_Set_Cursor@b^0,w,c
  3327   000C98  0F8F               	addlw	143
  3328   000C9A  6E14               	movwf	Lcd_Set_Cursor@temp^0,c
  3329                           
  3330                           ;lcd.c: 48:         z = temp>>4;
  3331   000C9C  3814               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3332   000C9E  0B0F               	andlw	15
  3333   000CA0  6E12               	movwf	Lcd_Set_Cursor@z^0,c
  3334                           
  3335                           ;lcd.c: 49:         y = temp & 0x0F;
  3336   000CA2  5014               	movf	Lcd_Set_Cursor@temp^0,w,c
  3337   000CA4  0B0F               	andlw	15
  3338   000CA6  6E13               	movwf	Lcd_Set_Cursor@y^0,c
  3339   000CA8                     
  3340                           ;lcd.c: 50:         Lcd_Cmd(z);
  3341   000CA8  5012               	movf	Lcd_Set_Cursor@z^0,w,c
  3342   000CAA  EC1B  F009         	call	_Lcd_Cmd
  3343   000CAE                     
  3344                           ;lcd.c: 51:         Lcd_Cmd(y);
  3345   000CAE  5013               	movf	Lcd_Set_Cursor@y^0,w,c
  3346   000CB0  EC1B  F009         	call	_Lcd_Cmd
  3347                           
  3348                           ;lcd.c: 52:     }
  3349   000CB4  EF76  F006         	goto	l253
  3350   000CB8                     l1714:
  3351   000CB8  0E04               	movlw	4
  3352   000CBA  1811               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3353   000CBC  A4D8               	btfss	status,2,c
  3354   000CBE  EF63  F006         	goto	u811
  3355   000CC2  EF65  F006         	goto	u810
  3356   000CC6                     u811:
  3357   000CC6  EF76  F006         	goto	l249
  3358   000CCA                     u810:
  3359   000CCA                     
  3360                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD0 + b - 1;
  3361   000CCA  5010               	movf	Lcd_Set_Cursor@b^0,w,c
  3362   000CCC  0FCF               	addlw	207
  3363   000CCE  6E14               	movwf	Lcd_Set_Cursor@temp^0,c
  3364                           
  3365                           ;lcd.c: 56:         z = temp>>4;
  3366   000CD0  3814               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3367   000CD2  0B0F               	andlw	15
  3368   000CD4  6E12               	movwf	Lcd_Set_Cursor@z^0,c
  3369                           
  3370                           ;lcd.c: 57:         y = temp & 0x0F;
  3371   000CD6  5014               	movf	Lcd_Set_Cursor@temp^0,w,c
  3372   000CD8  0B0F               	andlw	15
  3373   000CDA  6E13               	movwf	Lcd_Set_Cursor@y^0,c
  3374   000CDC                     
  3375                           ;lcd.c: 58:         Lcd_Cmd(z);
  3376   000CDC  5012               	movf	Lcd_Set_Cursor@z^0,w,c
  3377   000CDE  EC1B  F009         	call	_Lcd_Cmd
  3378   000CE2                     
  3379                           ;lcd.c: 59:         Lcd_Cmd(y);
  3380   000CE2  5013               	movf	Lcd_Set_Cursor@y^0,w,c
  3381   000CE4  EC1B  F009         	call	_Lcd_Cmd
  3382   000CE8  EF76  F006         	goto	l253
  3383   000CEC                     l249:
  3384   000CEC                     l253:
  3385   000CEC  0012               	return		;funcret
  3386   000CEE                     __end_of_Lcd_Set_Cursor:
  3387                           	callstack 0
  3388                           
  3389 ;; *************** function _Lcd_Cmd *****************
  3390 ;; Defined at:
  3391 ;;		line 11 in file "lcd.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  a               1    wreg     unsigned char 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  a               1   14[COMRAM] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0
  3406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3407 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3408 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3409 ;;Total ram usage:        2 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 6
  3412 ;; This function calls:
  3413 ;;		_Lcd_Port
  3414 ;; This function is called by:
  3415 ;;		_Lcd_Clear
  3416 ;;		_Lcd_Set_Cursor
  3417 ;;		_Lcd_Init
  3418 ;;		_Lcd_NoBlink
  3419 ;;		_Lcd_CGRAM_Init
  3420 ;;		_Lcd_CGRAM_Close
  3421 ;;		_Lcd_Shift_Right
  3422 ;;		_Lcd_Shift_Left
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text21
  3427   001236                     __ptext21:
  3428                           	callstack 0
  3429   001236                     _Lcd_Cmd:
  3430                           	callstack 22
  3431                           
  3432                           ;incstack = 0
  3433                           ;Lcd_Cmd@a stored from wreg
  3434   001236  6E0F               	movwf	Lcd_Cmd@a^0,c
  3435   001238                     
  3436                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATEbits.LE0 = 0;
  3437   001238  908D               	bcf	141,0,c	;volatile
  3438   00123A                     
  3439                           ;lcd.c: 14:     Lcd_Port(a);
  3440   00123A  500F               	movf	Lcd_Cmd@a^0,w,c
  3441   00123C  EC1D  F008         	call	_Lcd_Port
  3442   001240                     
  3443                           ;lcd.c: 15:     LATEbits.LE1 = 1;
  3444   001240  828D               	bsf	141,1,c	;volatile
  3445   001242                     
  3446                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3447   001242  0E06               	movlw	6
  3448   001244  6E0E               	movwf	??_Lcd_Cmd^0,c
  3449   001246  0E30               	movlw	48
  3450   001248                     u1347:
  3451   001248  2EE8               	decfsz	wreg,f,c
  3452   00124A  D7FE               	bra	u1347
  3453   00124C  2E0E               	decfsz	??_Lcd_Cmd^0,f,c
  3454   00124E  D7FC               	bra	u1347
  3455   001250  D000               	nop2	
  3456   001252                     
  3457                           ;lcd.c: 17:     LATEbits.LE1 = 0;
  3458   001252  928D               	bcf	141,1,c	;volatile
  3459   001254  0012               	return		;funcret
  3460   001256                     __end_of_Lcd_Cmd:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _Lcd_Port *****************
  3464 ;; Defined at:
  3465 ;;		line 3 in file "lcd.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  a               1    wreg     unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  a               1   12[COMRAM] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0
  3480 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3482 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3483 ;;Total ram usage:        1 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 5
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_Lcd_Cmd
  3490 ;;		_Lcd_Init
  3491 ;;		_Lcd_Write_Char
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text22
  3496   00103A                     __ptext22:
  3497                           	callstack 0
  3498   00103A                     _Lcd_Port:
  3499                           	callstack 23
  3500                           
  3501                           ;incstack = 0
  3502                           ;Lcd_Port@a stored from wreg
  3503   00103A  6E0D               	movwf	Lcd_Port@a^0,c
  3504   00103C                     
  3505                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  3506   00103C  A00D               	btfss	Lcd_Port@a^0,0,c
  3507   00103E  EF23  F008         	goto	u11
  3508   001042  EF25  F008         	goto	u10
  3509   001046                     u11:
  3510   001046  EF28  F008         	goto	l222
  3511   00104A                     u10:
  3512   00104A  888C               	bsf	140,4,c	;volatile
  3513   00104C  EF29  F008         	goto	l1018
  3514   001050                     l222:
  3515   001050  988C               	bcf	140,4,c	;volatile
  3516   001052                     l1018:
  3517                           
  3518                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3519   001052  A20D               	btfss	Lcd_Port@a^0,1,c
  3520   001054  EF2E  F008         	goto	u21
  3521   001058  EF30  F008         	goto	u20
  3522   00105C                     u21:
  3523   00105C  EF33  F008         	goto	l226
  3524   001060                     u20:
  3525   001060  8A8C               	bsf	140,5,c	;volatile
  3526   001062  EF34  F008         	goto	l1022
  3527   001066                     l226:
  3528   001066  9A8C               	bcf	140,5,c	;volatile
  3529   001068                     l1022:
  3530                           
  3531                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3532   001068  A40D               	btfss	Lcd_Port@a^0,2,c
  3533   00106A  EF39  F008         	goto	u31
  3534   00106E  EF3B  F008         	goto	u30
  3535   001072                     u31:
  3536   001072  EF3E  F008         	goto	l230
  3537   001076                     u30:
  3538   001076  8C8C               	bsf	140,6,c	;volatile
  3539   001078  EF3F  F008         	goto	l1026
  3540   00107C                     l230:
  3541   00107C  9C8C               	bcf	140,6,c	;volatile
  3542   00107E                     l1026:
  3543                           
  3544                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3545   00107E  A60D               	btfss	Lcd_Port@a^0,3,c
  3546   001080  EF44  F008         	goto	u41
  3547   001084  EF46  F008         	goto	u40
  3548   001088                     u41:
  3549   001088  EF49  F008         	goto	l234
  3550   00108C                     u40:
  3551   00108C  8E8C               	bsf	140,7,c	;volatile
  3552   00108E  EF4A  F008         	goto	l237
  3553   001092                     l234:
  3554   001092  9E8C               	bcf	140,7,c	;volatile
  3555   001094                     l237:
  3556   001094  0012               	return		;funcret
  3557   001096                     __end_of_Lcd_Port:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _LowISR *****************
  3561 ;; Defined at:
  3562 ;;		line 165 in file "ASCENSOR.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  dummy           1   11[COMRAM] volatile unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0
  3577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3578 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3579 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3580 ;;Total ram usage:        4 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 4
  3583 ;; This function calls:
  3584 ;;		_Lcd_Blink
  3585 ;;		i1_Lcd_Set_Cursor
  3586 ;; This function is called by:
  3587 ;;		Interrupt level 1
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	intcodelo
  3592   000018                     __pintcodelo:
  3593                           	callstack 0
  3594   000018                     _LowISR:
  3595                           	callstack 22
  3596                           
  3597                           ;incstack = 0
  3598   000018  802F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3599   00001A  CFD8 F009          	movff	status,??_LowISR
  3600   00001E  CFE8 F00A          	movff	wreg,??_LowISR+1
  3601   000022  CFE0 F00B          	movff	bsr,??_LowISR+2
  3602   000026                     
  3603                           ;ASCENSOR.c: 166:     Lcd_Blink();
  3604   000026  EC8E  F009         	call	_Lcd_Blink	;wreg free
  3605   00002A                     
  3606                           ;ASCENSOR.c: 167:     if (INTCONbits.RBIF){
  3607   00002A  A0F2               	btfss	242,0,c	;volatile
  3608   00002C  EF1A  F000         	goto	i1u106_21
  3609   000030  EF1C  F000         	goto	i1u106_20
  3610   000034                     i1u106_21:
  3611   000034  EF64  F000         	goto	i1l164
  3612   000038                     i1u106_20:
  3613   000038                     
  3614                           ;ASCENSOR.c: 168:        volatile unsigned char dummy = PORTB;
  3615   000038  CF81 F00C          	movff	3969,LowISR@dummy	;volatile
  3616                           
  3617                           ;ASCENSOR.c: 169:        INTCONbits.RBIF=0;
  3618   00003C  90F2               	bcf	242,0,c	;volatile
  3619                           
  3620                           ;ASCENSOR.c: 171:        if (PORTBbits.RB6==1 && f>1){
  3621   00003E  AC81               	btfss	129,6,c	;volatile
  3622   000040  EF24  F000         	goto	i1u107_21
  3623   000044  EF26  F000         	goto	i1u107_20
  3624   000048                     i1u107_21:
  3625   000048  EF2F  F000         	goto	i1l1998
  3626   00004C                     i1u107_20:
  3627   00004C  0E01               	movlw	1
  3628   00004E  642B               	cpfsgt	_f^0,c
  3629   000050  EF2C  F000         	goto	i1u108_21
  3630   000054  EF2E  F000         	goto	i1u108_20
  3631   000058                     i1u108_21:
  3632   000058  EF2F  F000         	goto	i1l1998
  3633   00005C                     i1u108_20:
  3634   00005C                     
  3635                           ;ASCENSOR.c: 172:            f--;
  3636   00005C  062B               	decf	_f^0,f,c
  3637   00005E                     i1l1998:
  3638                           
  3639                           ;ASCENSOR.c: 174:        if (PORTBbits.RB7==1 && f<3){
  3640   00005E  AE81               	btfss	129,7,c	;volatile
  3641   000060  EF34  F000         	goto	i1u109_21
  3642   000064  EF36  F000         	goto	i1u109_20
  3643   000068                     i1u109_21:
  3644   000068  EF3F  F000         	goto	i1l2004
  3645   00006C                     i1u109_20:
  3646   00006C  0E03               	movlw	3
  3647   00006E  602B               	cpfslt	_f^0,c
  3648   000070  EF3C  F000         	goto	i1u110_21
  3649   000074  EF3E  F000         	goto	i1u110_20
  3650   000078                     i1u110_21:
  3651   000078  EF3F  F000         	goto	i1l2004
  3652   00007C                     i1u110_20:
  3653   00007C                     
  3654                           ;ASCENSOR.c: 175:            f++;
  3655   00007C  2A2B               	incf	_f^0,f,c
  3656   00007E                     i1l2004:
  3657                           
  3658                           ;ASCENSOR.c: 177:        if (PORTBbits.RB4==1 && c>12){
  3659   00007E  A881               	btfss	129,4,c	;volatile
  3660   000080  EF44  F000         	goto	i1u111_21
  3661   000084  EF46  F000         	goto	i1u111_20
  3662   000088                     i1u111_21:
  3663   000088  EF4F  F000         	goto	i1l2010
  3664   00008C                     i1u111_20:
  3665   00008C  0E0C               	movlw	12
  3666   00008E  642A               	cpfsgt	_c^0,c
  3667   000090  EF4C  F000         	goto	i1u112_21
  3668   000094  EF4E  F000         	goto	i1u112_20
  3669   000098                     i1u112_21:
  3670   000098  EF4F  F000         	goto	i1l2010
  3671   00009C                     i1u112_20:
  3672   00009C                     
  3673                           ;ASCENSOR.c: 178:           c--;
  3674   00009C  062A               	decf	_c^0,f,c
  3675   00009E                     i1l2010:
  3676                           
  3677                           ;ASCENSOR.c: 180:        if (PORTBbits.RB5==1 && c< 15){
  3678   00009E  AA81               	btfss	129,5,c	;volatile
  3679   0000A0  EF54  F000         	goto	i1u113_21
  3680   0000A4  EF56  F000         	goto	i1u113_20
  3681   0000A8                     i1u113_21:
  3682   0000A8  EF5F  F000         	goto	i1l2016
  3683   0000AC                     i1u113_20:
  3684   0000AC  0E0F               	movlw	15
  3685   0000AE  602A               	cpfslt	_c^0,c
  3686   0000B0  EF5C  F000         	goto	i1u114_21
  3687   0000B4  EF5E  F000         	goto	i1u114_20
  3688   0000B8                     i1u114_21:
  3689   0000B8  EF5F  F000         	goto	i1l2016
  3690   0000BC                     i1u114_20:
  3691   0000BC                     
  3692                           ;ASCENSOR.c: 181:            c++;
  3693   0000BC  2A2A               	incf	_c^0,f,c
  3694   0000BE                     i1l2016:
  3695                           
  3696                           ;ASCENSOR.c: 184:        Lcd_Set_Cursor(f,c);
  3697   0000BE  C02A  F004         	movff	_c,i1Lcd_Set_Cursor@b
  3698   0000C2  502B               	movf	_f^0,w,c
  3699   0000C4  EC77  F006         	call	i1_Lcd_Set_Cursor
  3700   0000C8                     i1l164:
  3701   0000C8  C00B  FFE0         	movff	??_LowISR+2,bsr
  3702   0000CC  C00A  FFE8         	movff	??_LowISR+1,wreg
  3703   0000D0  C009  FFD8         	movff	??_LowISR,status
  3704   0000D4  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3705   0000D6  0010               	retfie	
  3706   0000D8                     __end_of_LowISR:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function i1_Lcd_Set_Cursor *****************
  3710 ;; Defined at:
  3711 ;;		line 26 in file "lcd.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  a               1    wreg     unsigned char 
  3714 ;;  b               1    3[COMRAM] unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  a               1    4[COMRAM] unsigned char 
  3717 ;;  temp            1    7[COMRAM] unsigned char 
  3718 ;;  y               1    6[COMRAM] unsigned char 
  3719 ;;  z               1    5[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         1       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        5 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 3
  3736 ;; This function calls:
  3737 ;;		i1_Lcd_Cmd
  3738 ;; This function is called by:
  3739 ;;		_LowISR
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text24
  3744   000CEE                     __ptext24:
  3745                           	callstack 0
  3746   000CEE                     i1_Lcd_Set_Cursor:
  3747                           	callstack 22
  3748                           
  3749                           ;incstack = 0
  3750                           ;i1Lcd_Set_Cursor@a stored from wreg
  3751   000CEE  6E05               	movwf	i1Lcd_Set_Cursor@a^0,c
  3752   000CF0                     
  3753                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3754   000CF0  0405               	decf	i1Lcd_Set_Cursor@a^0,w,c
  3755   000CF2  A4D8               	btfss	status,2,c
  3756   000CF4  EF7E  F006         	goto	i1u102_21
  3757   000CF8  EF80  F006         	goto	i1u102_20
  3758   000CFC                     i1u102_21:
  3759   000CFC  EF91  F006         	goto	i1l1964
  3760   000D00                     i1u102_20:
  3761   000D00                     
  3762                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3763   000D00  5004               	movf	i1Lcd_Set_Cursor@b^0,w,c
  3764   000D02  0F7F               	addlw	127
  3765   000D04  6E08               	movwf	i1Lcd_Set_Cursor@temp^0,c
  3766                           
  3767                           ;lcd.c: 32:         z = temp>>4;
  3768   000D06  3808               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  3769   000D08  0B0F               	andlw	15
  3770   000D0A  6E06               	movwf	i1Lcd_Set_Cursor@z^0,c
  3771                           
  3772                           ;lcd.c: 33:         y = temp & 0x0F;
  3773   000D0C  5008               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  3774   000D0E  0B0F               	andlw	15
  3775   000D10  6E07               	movwf	i1Lcd_Set_Cursor@y^0,c
  3776   000D12                     
  3777                           ;lcd.c: 34:         Lcd_Cmd(z);
  3778   000D12  5006               	movf	i1Lcd_Set_Cursor@z^0,w,c
  3779   000D14  EC2B  F009         	call	i1_Lcd_Cmd
  3780   000D18                     
  3781                           ;lcd.c: 35:         Lcd_Cmd(y);
  3782   000D18  5007               	movf	i1Lcd_Set_Cursor@y^0,w,c
  3783   000D1A  EC2B  F009         	call	i1_Lcd_Cmd
  3784                           
  3785                           ;lcd.c: 36:     }
  3786   000D1E  EFDF  F006         	goto	i1l253
  3787   000D22                     i1l1964:
  3788   000D22  0E02               	movlw	2
  3789   000D24  1805               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  3790   000D26  A4D8               	btfss	status,2,c
  3791   000D28  EF98  F006         	goto	i1u103_21
  3792   000D2C  EF9A  F006         	goto	i1u103_20
  3793   000D30                     i1u103_21:
  3794   000D30  EFAB  F006         	goto	i1l1972
  3795   000D34                     i1u103_20:
  3796   000D34                     
  3797                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3798   000D34  5004               	movf	i1Lcd_Set_Cursor@b^0,w,c
  3799   000D36  0FBF               	addlw	191
  3800   000D38  6E08               	movwf	i1Lcd_Set_Cursor@temp^0,c
  3801                           
  3802                           ;lcd.c: 40:         z = temp>>4;
  3803   000D3A  3808               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  3804   000D3C  0B0F               	andlw	15
  3805   000D3E  6E06               	movwf	i1Lcd_Set_Cursor@z^0,c
  3806                           
  3807                           ;lcd.c: 41:         y = temp & 0x0F;
  3808   000D40  5008               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  3809   000D42  0B0F               	andlw	15
  3810   000D44  6E07               	movwf	i1Lcd_Set_Cursor@y^0,c
  3811   000D46                     
  3812                           ;lcd.c: 42:         Lcd_Cmd(z);
  3813   000D46  5006               	movf	i1Lcd_Set_Cursor@z^0,w,c
  3814   000D48  EC2B  F009         	call	i1_Lcd_Cmd
  3815   000D4C                     
  3816                           ;lcd.c: 43:         Lcd_Cmd(y);
  3817   000D4C  5007               	movf	i1Lcd_Set_Cursor@y^0,w,c
  3818   000D4E  EC2B  F009         	call	i1_Lcd_Cmd
  3819                           
  3820                           ;lcd.c: 44:     }
  3821   000D52  EFDF  F006         	goto	i1l253
  3822   000D56                     i1l1972:
  3823   000D56  0E03               	movlw	3
  3824   000D58  1805               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  3825   000D5A  A4D8               	btfss	status,2,c
  3826   000D5C  EFB2  F006         	goto	i1u104_21
  3827   000D60  EFB4  F006         	goto	i1u104_20
  3828   000D64                     i1u104_21:
  3829   000D64  EFC5  F006         	goto	i1l1980
  3830   000D68                     i1u104_20:
  3831   000D68                     
  3832                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x90 + b - 1;
  3833   000D68  5004               	movf	i1Lcd_Set_Cursor@b^0,w,c
  3834   000D6A  0F8F               	addlw	143
  3835   000D6C  6E08               	movwf	i1Lcd_Set_Cursor@temp^0,c
  3836                           
  3837                           ;lcd.c: 48:         z = temp>>4;
  3838   000D6E  3808               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  3839   000D70  0B0F               	andlw	15
  3840   000D72  6E06               	movwf	i1Lcd_Set_Cursor@z^0,c
  3841                           
  3842                           ;lcd.c: 49:         y = temp & 0x0F;
  3843   000D74  5008               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  3844   000D76  0B0F               	andlw	15
  3845   000D78  6E07               	movwf	i1Lcd_Set_Cursor@y^0,c
  3846   000D7A                     
  3847                           ;lcd.c: 50:         Lcd_Cmd(z);
  3848   000D7A  5006               	movf	i1Lcd_Set_Cursor@z^0,w,c
  3849   000D7C  EC2B  F009         	call	i1_Lcd_Cmd
  3850   000D80                     
  3851                           ;lcd.c: 51:         Lcd_Cmd(y);
  3852   000D80  5007               	movf	i1Lcd_Set_Cursor@y^0,w,c
  3853   000D82  EC2B  F009         	call	i1_Lcd_Cmd
  3854                           
  3855                           ;lcd.c: 52:     }
  3856   000D86  EFDF  F006         	goto	i1l253
  3857   000D8A                     i1l1980:
  3858   000D8A  0E04               	movlw	4
  3859   000D8C  1805               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  3860   000D8E  A4D8               	btfss	status,2,c
  3861   000D90  EFCC  F006         	goto	i1u105_21
  3862   000D94  EFCE  F006         	goto	i1u105_20
  3863   000D98                     i1u105_21:
  3864   000D98  EFDF  F006         	goto	i1l249
  3865   000D9C                     i1u105_20:
  3866   000D9C                     
  3867                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD0 + b - 1;
  3868   000D9C  5004               	movf	i1Lcd_Set_Cursor@b^0,w,c
  3869   000D9E  0FCF               	addlw	207
  3870   000DA0  6E08               	movwf	i1Lcd_Set_Cursor@temp^0,c
  3871                           
  3872                           ;lcd.c: 56:         z = temp>>4;
  3873   000DA2  3808               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  3874   000DA4  0B0F               	andlw	15
  3875   000DA6  6E06               	movwf	i1Lcd_Set_Cursor@z^0,c
  3876                           
  3877                           ;lcd.c: 57:         y = temp & 0x0F;
  3878   000DA8  5008               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  3879   000DAA  0B0F               	andlw	15
  3880   000DAC  6E07               	movwf	i1Lcd_Set_Cursor@y^0,c
  3881   000DAE                     
  3882                           ;lcd.c: 58:         Lcd_Cmd(z);
  3883   000DAE  5006               	movf	i1Lcd_Set_Cursor@z^0,w,c
  3884   000DB0  EC2B  F009         	call	i1_Lcd_Cmd
  3885   000DB4                     
  3886                           ;lcd.c: 59:         Lcd_Cmd(y);
  3887   000DB4  5007               	movf	i1Lcd_Set_Cursor@y^0,w,c
  3888   000DB6  EC2B  F009         	call	i1_Lcd_Cmd
  3889   000DBA  EFDF  F006         	goto	i1l253
  3890   000DBE                     i1l249:
  3891   000DBE                     i1l253:
  3892   000DBE  0012               	return		;funcret
  3893   000DC0                     __end_ofi1_Lcd_Set_Cursor:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _Lcd_Blink *****************
  3897 ;; Defined at:
  3898 ;;		line 123 in file "lcd.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 3
  3919 ;; This function calls:
  3920 ;;		i1_Lcd_Cmd
  3921 ;; This function is called by:
  3922 ;;		_LowISR
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text25
  3927   00131C                     __ptext25:
  3928                           	callstack 0
  3929   00131C                     _Lcd_Blink:
  3930                           	callstack 22
  3931   00131C                     
  3932                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  3933   00131C  0E00               	movlw	0
  3934   00131E  EC2B  F009         	call	i1_Lcd_Cmd
  3935                           
  3936                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  3937   001322  0E0F               	movlw	15
  3938   001324  EC2B  F009         	call	i1_Lcd_Cmd
  3939   001328  0012               	return		;funcret
  3940   00132A                     __end_of_Lcd_Blink:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function i1_Lcd_Cmd *****************
  3944 ;; Defined at:
  3945 ;;		line 11 in file "lcd.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  a               1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  a               1    2[COMRAM] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        2 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 2
  3966 ;; This function calls:
  3967 ;;		i1_Lcd_Port
  3968 ;; This function is called by:
  3969 ;;		_Lcd_Blink
  3970 ;;		i1_Lcd_Set_Cursor
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text26
  3975   001256                     __ptext26:
  3976                           	callstack 0
  3977   001256                     i1_Lcd_Cmd:
  3978                           	callstack 22
  3979                           
  3980                           ;incstack = 0
  3981                           ;i1Lcd_Cmd@a stored from wreg
  3982   001256  6E03               	movwf	i1Lcd_Cmd@a^0,c
  3983   001258                     
  3984                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATEbits.LE0 = 0;
  3985   001258  908D               	bcf	141,0,c	;volatile
  3986   00125A                     
  3987                           ;lcd.c: 14:     Lcd_Port(a);
  3988   00125A  5003               	movf	i1Lcd_Cmd@a^0,w,c
  3989   00125C  EC4B  F008         	call	i1_Lcd_Port
  3990   001260                     
  3991                           ;lcd.c: 15:     LATEbits.LE1 = 1;
  3992   001260  828D               	bsf	141,1,c	;volatile
  3993   001262                     
  3994                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3995   001262  0E06               	movlw	6
  3996   001264  6E02               	movwf	??i1_Lcd_Cmd^0,c
  3997   001266  0E30               	movlw	48
  3998   001268                     i1u135_27:
  3999   001268  2EE8               	decfsz	wreg,f,c
  4000   00126A  D7FE               	bra	i1u135_27
  4001   00126C  2E02               	decfsz	??i1_Lcd_Cmd^0,f,c
  4002   00126E  D7FC               	bra	i1u135_27
  4003   001270  D000               	nop2	
  4004   001272                     
  4005                           ;lcd.c: 17:     LATEbits.LE1 = 0;
  4006   001272  928D               	bcf	141,1,c	;volatile
  4007   001274  0012               	return		;funcret
  4008   001276                     __end_ofi1_Lcd_Cmd:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function i1_Lcd_Port *****************
  4012 ;; Defined at:
  4013 ;;		line 3 in file "lcd.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  a               1    wreg     unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  a               1    0[COMRAM] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0
  4028 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4030 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		i1_Lcd_Cmd
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text27
  4042   001096                     __ptext27:
  4043                           	callstack 0
  4044   001096                     i1_Lcd_Port:
  4045                           	callstack 22
  4046                           
  4047                           ;incstack = 0
  4048                           ;i1Lcd_Port@a stored from wreg
  4049   001096  6E01               	movwf	i1Lcd_Port@a^0,c
  4050   001098                     
  4051                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  4052   001098  A001               	btfss	i1Lcd_Port@a^0,0,c
  4053   00109A  EF51  F008         	goto	i1u74_21
  4054   00109E  EF53  F008         	goto	i1u74_20
  4055   0010A2                     i1u74_21:
  4056   0010A2  EF56  F008         	goto	i1l222
  4057   0010A6                     i1u74_20:
  4058   0010A6  888C               	bsf	140,4,c	;volatile
  4059   0010A8  EF57  F008         	goto	i1l1678
  4060   0010AC                     i1l222:
  4061   0010AC  988C               	bcf	140,4,c	;volatile
  4062   0010AE                     i1l1678:
  4063                           
  4064                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  4065   0010AE  A201               	btfss	i1Lcd_Port@a^0,1,c
  4066   0010B0  EF5C  F008         	goto	i1u75_21
  4067   0010B4  EF5E  F008         	goto	i1u75_20
  4068   0010B8                     i1u75_21:
  4069   0010B8  EF61  F008         	goto	i1l226
  4070   0010BC                     i1u75_20:
  4071   0010BC  8A8C               	bsf	140,5,c	;volatile
  4072   0010BE  EF62  F008         	goto	i1l1682
  4073   0010C2                     i1l226:
  4074   0010C2  9A8C               	bcf	140,5,c	;volatile
  4075   0010C4                     i1l1682:
  4076                           
  4077                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  4078   0010C4  A401               	btfss	i1Lcd_Port@a^0,2,c
  4079   0010C6  EF67  F008         	goto	i1u76_21
  4080   0010CA  EF69  F008         	goto	i1u76_20
  4081   0010CE                     i1u76_21:
  4082   0010CE  EF6C  F008         	goto	i1l230
  4083   0010D2                     i1u76_20:
  4084   0010D2  8C8C               	bsf	140,6,c	;volatile
  4085   0010D4  EF6D  F008         	goto	i1l1686
  4086   0010D8                     i1l230:
  4087   0010D8  9C8C               	bcf	140,6,c	;volatile
  4088   0010DA                     i1l1686:
  4089                           
  4090                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  4091   0010DA  A601               	btfss	i1Lcd_Port@a^0,3,c
  4092   0010DC  EF72  F008         	goto	i1u77_21
  4093   0010E0  EF74  F008         	goto	i1u77_20
  4094   0010E4                     i1u77_21:
  4095   0010E4  EF77  F008         	goto	i1l234
  4096   0010E8                     i1u77_20:
  4097   0010E8  8E8C               	bsf	140,7,c	;volatile
  4098   0010EA  EF78  F008         	goto	i1l237
  4099   0010EE                     i1l234:
  4100   0010EE  9E8C               	bcf	140,7,c	;volatile
  4101   0010F0                     i1l237:
  4102   0010F0  0012               	return		;funcret
  4103   0010F2                     __end_ofi1_Lcd_Port:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _Stop *****************
  4107 ;; Defined at:
  4108 ;;		line 188 in file "ASCENSOR.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		None
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4125 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		Interrupt level 2
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	intcode
  4136   000008                     __pintcode:
  4137                           	callstack 0
  4138   000008                     _Stop:
  4139                           	callstack 22
  4140                           
  4141                           ;incstack = 0
  4142   000008  822F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4143   00000A  ED61  F009         	call	int_func,f	;refresh shadow registers
  4144                           
  4145                           	psect	intcode_body
  4146   0012C2                     __pintcode_body:
  4147                           	callstack 22
  4148   0012C2                     int_func:
  4149                           	callstack 22
  4150   0012C2  0006               	pop		; remove dummy address from shadow register refresh
  4151   0012C4                     
  4152                           ;ASCENSOR.c: 189: INTCONbits.GIEH = 0;
  4153   0012C4  9EF2               	bcf	242,7,c	;volatile
  4154                           
  4155                           ;ASCENSOR.c: 190: T0CONbits.TMR0ON = 0;
  4156   0012C6  9ED5               	bcf	213,7,c	;volatile
  4157                           
  4158                           ;ASCENSOR.c: 191: LATDbits.LATD2=0;
  4159   0012C8  948C               	bcf	140,2,c	;volatile
  4160                           
  4161                           ;ASCENSOR.c: 192: LATDbits.LATD3=0;
  4162   0012CA  968C               	bcf	140,3,c	;volatile
  4163                           
  4164                           ;ASCENSOR.c: 193: INTCONbits.TMR0IF = 0;
  4165   0012CC  94F2               	bcf	242,2,c	;volatile
  4166                           
  4167                           ;ASCENSOR.c: 194: INTCONbits.GIEH = 1;
  4168   0012CE  8EF2               	bsf	242,7,c	;volatile
  4169   0012D0  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4170   0012D2  0011               	retfie		f
  4171   0012D4                     __end_of_Stop:
  4172                           	callstack 0
  4173                           
  4174                           	psect	rparam
  4175   000001                     ___rparam_used  equ	1
  4176   000000                     ___param_bank   equ	0
  4177   000000                     __Lparam        equ	__Lrparam
  4178   000000                     __Hparam        equ	__Hrparam
  4179                           
  4180                           	psect	temp
  4181   00002F                     btemp:
  4182                           	callstack 0
  4183   00002F                     	ds	1
  4184   00002F                     int$flags       set	btemp
  4185   000030                     wtemp8          set	btemp+1
  4186   000030                     ttemp5          set	btemp+1
  4187   000033                     ttemp6          set	btemp+4
  4188   000037                     ttemp7          set	btemp+8
  4189                           
  4190                           	psect	config
  4191                           
  4192                           ;Config register CONFIG1L @ 0x300000
  4193                           ;	PLL Prescaler Selection bits
  4194                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4195                           ;	System Clock Postscaler Selection bits
  4196                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4197                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4198                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4199   300000                     	org	3145728
  4200   300000  00                 	db	0
  4201                           
  4202                           ;Config register CONFIG1H @ 0x300001
  4203                           ;	Oscillator Selection bits
  4204                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  4205                           ;	Fail-Safe Clock Monitor Enable bit
  4206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4207                           ;	Internal/External Oscillator Switchover bit
  4208                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4209   300001                     	org	3145729
  4210   300001  08                 	db	8
  4211                           
  4212                           ;Config register CONFIG2L @ 0x300002
  4213                           ;	Power-up Timer Enable bit
  4214                           ;	PWRT = OFF, PWRT disabled
  4215                           ;	Brown-out Reset Enable bits
  4216                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4217                           ;	Brown-out Reset Voltage bits
  4218                           ;	BORV = 3, Minimum setting 2.05V
  4219                           ;	USB Voltage Regulator Enable bit
  4220                           ;	VREGEN = OFF, USB voltage regulator disabled
  4221   300002                     	org	3145730
  4222   300002  19                 	db	25
  4223                           
  4224                           ;Config register CONFIG2H @ 0x300003
  4225                           ;	Watchdog Timer Enable bit
  4226                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4227                           ;	Watchdog Timer Postscale Select bits
  4228                           ;	WDTPS = 32768, 1:32768
  4229   300003                     	org	3145731
  4230   300003  1E                 	db	30
  4231                           
  4232                           ; Padding undefined space
  4233   300004                     	org	3145732
  4234   300004  FF                 	db	255
  4235                           
  4236                           ;Config register CONFIG3H @ 0x300005
  4237                           ;	CCP2 MUX bit
  4238                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  4239                           ;	PORTB A/D Enable bit
  4240                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4241                           ;	Low-Power Timer 1 Oscillator Enable bit
  4242                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4243                           ;	MCLR Pin Enable bit
  4244                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4245   300005                     	org	3145733
  4246   300005  00                 	db	0
  4247                           
  4248                           ;Config register CONFIG4L @ 0x300006
  4249                           ;	Stack Full/Underflow Reset Enable bit
  4250                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4251                           ;	Single-Supply ICSP Enable bit
  4252                           ;	LVP = OFF, Single-Supply ICSP disabled
  4253                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4254                           ;	ICPRT = ON, ICPORT enabled
  4255                           ;	Extended Instruction Set Enable bit
  4256                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4257                           ;	Background Debugger Enable bit
  4258                           ;	DEBUG = 0x1, unprogrammed default
  4259   300006                     	org	3145734
  4260   300006  A0                 	db	160
  4261                           
  4262                           ; Padding undefined space
  4263   300007                     	org	3145735
  4264   300007  FF                 	db	255
  4265                           
  4266                           ;Config register CONFIG5L @ 0x300008
  4267                           ;	Code Protection bit
  4268                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4269                           ;	Code Protection bit
  4270                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4271                           ;	Code Protection bit
  4272                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4273                           ;	Code Protection bit
  4274                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4275   300008                     	org	3145736
  4276   300008  0F                 	db	15
  4277                           
  4278                           ;Config register CONFIG5H @ 0x300009
  4279                           ;	Boot Block Code Protection bit
  4280                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4281                           ;	Data EEPROM Code Protection bit
  4282                           ;	CPD = OFF, Data EEPROM is not code-protected
  4283   300009                     	org	3145737
  4284   300009  C0                 	db	192
  4285                           
  4286                           ;Config register CONFIG6L @ 0x30000A
  4287                           ;	Write Protection bit
  4288                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4289                           ;	Write Protection bit
  4290                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4291                           ;	Write Protection bit
  4292                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4293                           ;	Write Protection bit
  4294                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4295   30000A                     	org	3145738
  4296   30000A  0F                 	db	15
  4297                           
  4298                           ;Config register CONFIG6H @ 0x30000B
  4299                           ;	Configuration Register Write Protection bit
  4300                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4301                           ;	Boot Block Write Protection bit
  4302                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4303                           ;	Data EEPROM Write Protection bit
  4304                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4305   30000B                     	org	3145739
  4306   30000B  E0                 	db	224
  4307                           
  4308                           ;Config register CONFIG7L @ 0x30000C
  4309                           ;	Table Read Protection bit
  4310                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4311                           ;	Table Read Protection bit
  4312                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4313                           ;	Table Read Protection bit
  4314                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4315                           ;	Table Read Protection bit
  4316                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4317   30000C                     	org	3145740
  4318   30000C  0F                 	db	15
  4319                           
  4320                           ;Config register CONFIG7H @ 0x30000D
  4321                           ;	Boot Block Table Read Protection bit
  4322                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4323   30000D                     	org	3145741
  4324   30000D  40                 	db	64
  4325                           tosu	equ	0xFFF
  4326                           tosh	equ	0xFFE
  4327                           tosl	equ	0xFFD
  4328                           stkptr	equ	0xFFC
  4329                           pclatu	equ	0xFFB
  4330                           pclath	equ	0xFFA
  4331                           pcl	equ	0xFF9
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           indf0	equ	0xFEF
  4339                           postinc0	equ	0xFEE
  4340                           postdec0	equ	0xFED
  4341                           preinc0	equ	0xFEC
  4342                           plusw0	equ	0xFEB
  4343                           fsr0h	equ	0xFEA
  4344                           fsr0l	equ	0xFE9
  4345                           wreg	equ	0xFE8
  4346                           indf1	equ	0xFE7
  4347                           postinc1	equ	0xFE6
  4348                           postdec1	equ	0xFE5
  4349                           preinc1	equ	0xFE4
  4350                           plusw1	equ	0xFE3
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           bsr	equ	0xFE0
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           preinc2	equ	0xFDC
  4358                           plusw2	equ	0xFDB
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    16
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_CGRAM_CreateChar@chardata	PTR const unsigned char  size(1) Largest target is 8
		 -> figura_1(CODE[8]), figura_2(CODE[8]), 

    Lcd_Write_String@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[7]), STR_2(CODE[8]), STR_3(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_CGRAM_CreateChar
    _estado->_EEPROM_Read
    _dejar->_guardar
    _guardar->_EEPROM_Write
    _Modificar->_Lcd_Write_Char
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_CGRAM_Init->_Lcd_Cmd
    _Lcd_CGRAM_CreateChar->_Lcd_Write_Char
    _Lcd_CGRAM_Close->_Lcd_Cmd
    _Actualizar_Matriz->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LowISR in COMRAM

    _LowISR->i1_Lcd_Set_Cursor
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    _Lcd_Blink->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _Stop in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _Stop in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _Stop in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _Stop in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _Stop in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _Stop in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _Stop in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _Stop in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _Stop in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3980
                                             27 COMRAM     2     2      0
                  _Actualizar_Matriz
                    _Lcd_CGRAM_Close
               _Lcd_CGRAM_CreateChar
                     _Lcd_CGRAM_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _Modificar
                              _dejar
                           _detectar
                             _estado
                           _init_int
                         _init_ports
                             _reposo
 ---------------------------------------------------------------------------------
 (1) _reposo                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _estado                                               4     4      0     195
                                             13 COMRAM     3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _detectar                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dejar                                                2     2      0     325
                                             17 COMRAM     2     2      0
                            _guardar
 ---------------------------------------------------------------------------------
 (2) _guardar                                              3     3      0     325
                                             14 COMRAM     3     3      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1      55
                                             12 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Modificar                                            0     0      0     195
                        _Lcd_NoBlink
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_NoBlink                                          0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     3      1     213
                                             16 COMRAM     4     3      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     210
                                             15 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Init                                       0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_CreateChar                                11    10      1     871
                                             16 COMRAM    11    10      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_CGRAM_Close                                      0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Actualizar_Matriz                                    3     3      0     975
                                             20 COMRAM     3     3      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                             13 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     651
                                             15 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                             13 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _LowISR                                               4     4      0     860
                                              8 COMRAM     4     4      0
                          _Lcd_Blink
                   i1_Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     5     4      1     714
                                              3 COMRAM     5     4      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) _Lcd_Blink                                            0     0      0     145
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            2     2      0     145
                                              1 COMRAM     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0     116
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Actualizar_Matriz
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_CGRAM_Close
     _Lcd_Cmd
   _Lcd_CGRAM_CreateChar
     _Lcd_Write_Char
   _Lcd_CGRAM_Init
     _Lcd_Cmd
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _Modificar
     _Lcd_NoBlink
       _Lcd_Cmd
     _Lcd_Write_Char
   _dejar
     _guardar
       _EEPROM_Write
   _detectar
   _estado
     _EEPROM_Read
   _init_int
   _init_ports
   _reposo

 _LowISR (ROOT)
   _Lcd_Blink
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd

 _Stop (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     29      46     48.9%
BITBIGSFRl          32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      46      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Oct 01 21:42:20 2025

                           _c 002A                             _f 002B                            l99 1292  
                          u10 104A                            u11 1046                            u20 1060  
                          u21 105C                            u30 1076                            u31 1072  
                          u40 108C                            u41 1088                            bsr 0FE0  
                         l102 12C0                           l110 11BA                           l112 11C8  
                         l121 0F4E                           l113 11CA                           l105 11AA  
                         l106 119A                           l140 0F76                           l116 0EFA  
                         l108 11A8                           l117 0F4E                           l230 107C  
                         l222 1050                           l142 0F9E                           l118 0F24  
                         l151 1012                           l240 1254                           l136 0C1A  
                         l312 131A                           l145 0FC6                           l234 1092  
                         l226 1066                           l306 0A0E                           l330 1234  
                         l154 1038                           l243 12FE                           l180 113E  
                         l172 1116                           l237 1094                           l253 0CEC  
                         l309 130C                           l173 1108                           l333 12E2  
                         l149 0FEC                           l327 1222                           l183 0DC6  
                         l256 0ECE                           l249 0CEC                           l281 082E  
                         l265 1188                           l177 112C                           l329 1230  
                         l186 0E0A                           l259 1202                           l196 0A98  
                         l277 12F0                           l189 0E4C                           u200 11C8  
                         u201 11C4                           u210 0EDE                           u211 0EDA  
                         u220 0EEC                           u221 0EE8                           u230 0F08  
                         u231 0F04                           u240 0F16                           u241 0F12  
                         u250 0F32                           u330 0FEC                           u170 1198  
                         u251 0F2E                           u331 0FE8                           u171 1194  
                         u260 0F40                           u340 1012                           u180 11A8  
                         u261 0F3C                           u341 100E                           u181 11A4  
                         u350 1038                           u190 11B8                           u351 1034  
                         u191 11B4                           u360 1100                           u361 10FC  
                         u370 1116                           u371 1112                           u380 1124  
                         u381 1120                           u390 113A                           u391 1136  
                         u800 0C96                           u801 0C92                           u810 0CCA  
                         u730 1230                           u811 0CC6                           u731 122C  
                         u900 0C08                           u820 0F76                           u901 0C04  
                         u821 0F72                           u830 0F9E                           u910 0DD4  
                         u831 0F9A                           u911 0DD0                           u840 0FC6  
                         u920 0E18                           u841 0FC2                           u921 0E14  
                         u850 0B5A                           u930 0858                           u851 0B56  
                         u931 0854                           u780 0C2E                           u860 0B7C  
                         u940 088C                           u781 0C2A                           u861 0B78  
                         u941 0888                           u790 0C62                           u870 0BA0  
                         u950 08C0                           u791 0C5E                           u871 0B9C  
                         u951 08BC                           u880 0BC2                           u960 08F4  
                         u881 0BBE                           u961 08F0                           u890 0BE6  
                         u970 0928                           u891 0BE2                           u971 0924  
                         u980 095C                           u981 0958                           u990 0990  
                         u991 098C             _Actualizar_Matriz 0B36                           wreg 0FE8  
         __end_of_Lcd_NoBlink 12F2            ?_Actualizar_Matriz 0001         Lcd_CGRAM_CreateChar@i 0014  
                        l1020 1060                          l1022 1068                          l1014 103C  
                        l1110 11DA                          l1024 1076                          l1016 104A  
                        l1120 11F0                          l1112 11DC                          l1200 1286  
                        l1026 107E                          l1018 1052                          l1050 1238  
                        l1122 11F6                          l1114 11E4                          l1210 1290  
                        l1202 1288                          l1028 108C                          l1052 123A  
                        l1124 11F8                          l1116 11E6                          l1108 11CE  
                        l1204 128A                          l2020 0A20                          l1054 1240  
                        l1126 1200                          l1118 11EE                          l1230 0EDE  
                        l1310 0FC8                          l1214 12AE                          l1206 128C  
                        l1222 118A                          l2030 0A4A                          l2022 0A2A  
                        l1056 1242                          l1400 0EB2                          l1240 0F1E  
                        l1232 0EEC                          l1160 12D6                          l1320 0FDC  
                        l1216 12B6                          l1208 128E                          l1224 1198  
                        l2040 0A76                          l2032 0A52                          l2024 0A38  
                        l1058 1252                          l1410 1300                          l1402 0EB8  
                        l1242 0F32                          l1234 0EF4                          l1162 12DA  
                        l1330 1002                          l1218 12BE                          l1226 11B8  
                        l2050 0AB8                          l2042 0A8E                          l2034 0A5C  
                        l2026 0A3C                          l2018 0A10                          l1404 0EBE  
                        l1172 12E4                          l1244 0F40                          l1236 0F08  
                        l1228 0ED0                          l1164 12DC                          l1340 1028  
                        l1316 0FCA                          l2060 0AF6                          l2052 0AC6  
                        l2044 0A92                          l2036 0A64                          l2028 0A40  
                        l1174 12F2                          l1406 0EC4                          l1350 1124  
                        l1246 0F48                          l1238 0F16                          l1166 12DE  
                        l1326 0FEE                          l1318 0FDA                          l1190 127C  
                        l2062 0AFA                          l2054 0AD4                          l2046 0AA6  
                        l2038 0A6E                          l1512 130E                          l1408 0ECA  
                        l1352 112A                          l1344 10F2                          l1168 12E0  
                        l1336 1014                          l1328 1000                          l1192 127E  
                        l2064 0B0A                          l2048 0AB4                          l2056 0AD8  
                        l1354 113A                          l1346 1100                          l1338 1026  
                        l1194 1280                          l1186 1276                          l2066 0B1A  
                        l2058 0AE6                          l1700 0C62                          l1380 0E5A  
                        l1348 1106                          l1196 1282                          l1188 127A  
                        l2068 0B2A                          l1710 0CA8                          l1702 0C74  
                        l1390 0E8C                          l1382 0E60                          l1198 1284  
                        l1720 0CE2                          l1712 0CAE                          l1704 0C7A  
                        l1800 0BC2                          l1392 0E9A                          l1384 0E70  
                        l1714 0CB8                          l1706 0C84                          l1810 0BE6  
                        l1802 0BCC                          l1394 0EA0                          l1386 0E76  
                        l1378 0E4E                          l1730 0F64                          l1722 0F50  
                        l1716 0CCA                          l1708 0C96                          l1820 0C12  
                        l1812 0BF0                          l1396 0EA6                          l1388 0E86  
                        l1660 1210                          l1740 0F8C                          l1732 0F66  
                        l1718 0CDC                          l1822 0C16                          l1814 0BF6  
                        l1902 08FC                          l1398 0EAC                          l1670 121E  
                        l1662 1212                          l1654 1206                          l1750 0FB4  
                        l1742 0F8E                          l1830 0DEA                          l1816 0BF8  
                        l1808 0BCE                          l1920 0960                          l1904 0916  
                        l1672 1220                          l1664 1214                          l1656 120A  
                        l1752 0FB6                          l1728 0F52                          l1840 0E2E  
                        l1832 0E02                          l1690 0C1E                          l1818 0C08  
                        l1930 0980                          l1914 0930                          l1906 0918  
                        l1666 1216                          l1658 120E                          l1738 0F78  
                        l1842 0E32                          l1834 0E06                          l1826 0DC0  
                        l1692 0C2E                          l1780 0B6C                          l1772 0B42  
                        l1764 0B36                          l1940 09B2                          l1932 0994  
                        l1916 094A                          l1908 092C                          l1860 085C  
                        l1668 121A                          l1748 0FA0                          l1844 0E34  
                        l1836 0E08                          l1828 0DD4                          l1694 0C40  
                        l1790 0B88                          l1782 0B7C                          l1774 0B5A  
                        l1766 0B40                          l1942 09B4                          l1926 0964  
                        l1918 094C                          l1870 087C                          l1854 0830  
                        l1950 114C                          l1838 0E18                          l1696 0C46  
                        l1792 0BA0                          l1784 0B86                          l1776 0B64  
                        l1928 097E                          l1880 08AE                          l1872 0890  
                        l1856 0846                          l1848 082A                          l1952 1162  
                        l1698 0C50                          l1794 0BAA                          l1778 0B6A  
                        l1938 0998                          l1890 08C8                          l1882 08B0  
                        l1866 0860                          l1858 0848                          l1946 09C8  
                        l1954 1166                          l1796 0BB0                          l1892 08E2  
                        l1884 08C4                          l1868 087A                          l1948 1140  
                        l1798 0BB2                          l1894 08E4                          l1878 0894  
                        l1896 08F8                          STR_1 0819                          STR_2 0811  
                        STR_3 0820               ?_Lcd_CGRAM_Init 0001                          u1000 09C4  
                        u1001 09C0                          u1010 1188                          u1011 1184  
                        u1200 0B0A                          u1201 0B06                          u1210 0B1A  
                        u1211 0B16                          u1220 0B2A                          u1221 0B26  
                        u1150 0AA6                          u1151 0AA2                          u1160 0AB4  
                        u1161 0AB0                          u1170 0AC6                          u1307 0E7C  
                        u1171 0AC2                          u1180 0AD4                          u1317 0E92  
                        u1181 0AD0                          _LATA 0F89                          u1190 0AE6  
                        _LATB 0F8A                          u1327 11E8                          u1191 0AE2  
                        u1247 0A80                          _LATC 0F8B                          _LATD 0F8C  
                        u1337 11FA                          u1257 0DDE                          _LATE 0F8D  
                        u1347 1248                          u1267 0DF6                          u1277 0E22  
                        u1287 0E3E                          u1297 0E66                          _Stop 0008  
           ?_Lcd_Write_String 0011                          _main 0A10           ??_Actualizar_Matriz 0015  
                        fsr2h 0FDA                          indf2 0FDF                          fsr2l 0FD9  
                        btemp 002F                          start 00D8            ??_Lcd_Write_String 0012  
             EEPROM_Write@dir 000E               __end_of_Lcd_Cmd 1256                  ___param_bank 0000  
        __end_of_EEPROM_Write 1236                         ?_Stop 0001                         ?_main 0001  
                       _EEADR 0FA9              ?_Lcd_CGRAM_Close 0001     __end_of_Actualizar_Matriz 0C1C  
                       _T0CON 0FD5                         _NEGRA 002C                         i1l230 10D8  
                       i1l222 10AC                         i1l240 1274                         i1l234 10EE  
                       i1l226 10C2                         i1l164 00C8                         i1l237 10F0  
                       i1l253 0DBE                         _METAL 002E                         i1l249 0DBE  
                       i1l274 1328                         i2l169 12D0             ?i1_Lcd_Set_Cursor 0004  
                       _TMR0L 0FD6                         _PORTB 0F81                         _TRISA 0F92  
                       _TRISB 0F93                         _TRISC 0F94                         _TRISD 0F95  
                       _TRISE 0F96                         _Fila1 0026                         _Fila2 0022  
                       _Fila3 001E                   ?i1_Lcd_Port 0001            ??i1_Lcd_Set_Cursor 0005  
                       _dejar 0DC0               __end_of_guardar 0FC8                         tablat 0FF5  
                       ttemp5 0030                         ttemp6 0033                         ttemp7 0037  
                       status 0FD8                         wtemp8 0030                   LowISR@dummy 000C  
            EEPROM_Write@data 000D              __end_of_Lcd_Init 0ED0              __end_of_Lcd_Port 1096  
      Actualizar_Matriz@i_682 0016        Actualizar_Matriz@i_683 0017               __initialization 1294  
                __end_of_Stop 12D4                  __end_of_main 0B36                        ??_Stop 0001  
                 _Lcd_NoBlink 12E4                        ??_main 001C                 __activetblptr 0002  
     Lcd_CGRAM_CreateChar@add 0013                   estado@i_691 000F                   estado@i_692 0010  
                      ?_dejar 0001                        _EEDATA 0FA8                        _BLANCA 002D  
                      _EECON2 0FA7                        i1l2000 006C                        i1l2010 009E  
                      i1l2002 007C                        i1l2012 00AC                        i1l2004 007E  
                      i1l2014 00BC                        i1l2006 008C                        i1l2016 00BE  
                      i1l2008 009C                        i1l1680 10BC                        i1l1760 1262  
                      i1l1824 131C                        i1l1682 10C4                        i1l1674 1098  
                      i1l1762 1272                        i1l1754 1258                        i1l1684 10D2  
                      i1l1676 10A6                        i1l1756 125A                        i1l1686 10DA  
                      i1l1678 10AE                        i1l1758 1260                        i1l1688 10E8  
                      i1l1960 0D12                        i1l1970 0D4C                        i1l1962 0D18  
                      i1l1980 0D8A                        i1l1972 0D56                        i1l1964 0D22  
                      i1l1956 0CF0                        i1l1982 0D9C                        i1l1974 0D68  
                      i1l1966 0D34                        i1l1958 0D00                        i1l1990 002A  
                      i1l1984 0DAE                        i1l1976 0D7A                        i1l1968 0D46  
                      i1l1992 0038                        i1l1986 0DB4                        i1l1978 0D80  
                      i1l1994 004C                        i1l1996 005C                        i1l1988 0026  
                      i1l1998 005E                        i2l1584 12C4                        _INTCON 0FF2  
                   ??_Lcd_Cmd 000E              __end_of_detectar 0F50                        _LowISR 0018  
           __end_ofi1_Lcd_Cmd 1276              __end_of_figura_1 0811              __end_of_figura_2 0809  
Lcd_CGRAM_CreateChar@chardata 0011                        _estado 0FC8              __end_of_init_int 12C2  
                      clear_0 129A                        _reposo 118A                        isa$std 0001  
                   ??_guardar 000F                  __mediumconst 0800                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8               Lcd_Set_Cursor@a 0011  
             Lcd_Set_Cursor@b 0010               Lcd_Set_Cursor@y 0013               Lcd_Set_Cursor@z 0012  
   Lcd_CGRAM_CreateChar@i_872 0015     Lcd_CGRAM_CreateChar@i_873 0016     Lcd_CGRAM_CreateChar@i_874 0017  
   Lcd_CGRAM_CreateChar@i_875 0018     Lcd_CGRAM_CreateChar@i_876 0019     Lcd_CGRAM_CreateChar@i_877 001A  
   Lcd_CGRAM_CreateChar@i_878 001B                    __accesstop 0060       __end_of__initialization 12A0  
           __end_of_Lcd_Clear 1300             __end_of_Lcd_Blink 132A                 ___rparam_used 0001  
              __pcstackCOMRAM 0001                 __end_of_dejar 0E4E                _Lcd_Set_Cursor 0C1C  
            ??_Lcd_CGRAM_Init 0010             __end_of_Modificar 1140                     ?_Lcd_Init 0001  
                     ??_dejar 0012                     ?_Lcd_Port 0001                  _EEPROM_Write 1204  
                     ?_LowISR 0001                       ?_estado 0001        __end_of_Lcd_Set_Cursor 0CEE  
                     ?_reposo 0001                  ??i1_Lcd_Port 0001                       i1u74_20 10A6  
                     i1u74_21 10A2                       i1u75_20 10BC                       i1u75_21 10B8  
                     i1u76_20 10D2                       i1u76_21 10CE                       i1u77_20 10E8  
                     i1u77_21 10E4                    ??_Lcd_Init 0010                     ?_detectar 0001  
                  ??_Lcd_Port 000D                  guardar@i_686 0010                  guardar@i_687 0011  
              _Lcd_Write_Char 11CC                       _Lcd_Cmd 1236                     ?_init_int 0001  
                     __Hparam 0000                       __Lparam 0000            __end_ofi1_Lcd_Port 10F2  
                __psmallconst 0800                       __pcinit 1294                    _init_ports 1276  
                     __ramtop 0800               ?_Lcd_Set_Cursor 0010                  ?_Lcd_NoBlink 0001  
                     __ptext0 0A10                       __ptext1 118A                       __ptext2 1276  
                     __ptext3 12AE                       __ptext4 0FC8                       __ptext5 12D4  
                     __ptext6 0ED0                       __ptext7 0DC0                       __ptext8 0F50  
                     __ptext9 1204                     _T0CONbits 0FD5                       _guardar 0F50  
                  ??_detectar 000D        __end_of_Lcd_Write_Char 1204                __pintcode_body 12C2  
        end_of_initialization 12A0                       estado@i 000E                 ??_EEPROM_Read 000D  
               __Lmediumconst 0000                    ??_init_int 000D                       int_func 12C2  
                     postinc0 0FEE                     Lcd_Port@a 000D                     i1_Lcd_Cmd 1256  
                   _PORTAbits 0F80                     _PORTBbits 0F81                     _PORTCbits 0F82  
                   _TRISCbits 0F94                     _TRISDbits 0F95               ?_Lcd_Write_Char 0001  
           Lcd_Write_String@a 0011             Lcd_Write_String@i 0013           __end_of_EEPROM_Read 12E4  
              __end_of_LowISR 00D8                     _Lcd_Clear 12F2                     _Lcd_Blink 131C  
                  ?i1_Lcd_Cmd 0001              _Lcd_Write_String 1140                   ?_init_ports 0001  
              __end_of_estado 103A  __end_of_Lcd_CGRAM_CreateChar 0A10                __end_of_reposo 11CC  
         start_initialization 1294                     _Modificar 10F2              i1_Lcd_Set_Cursor 0CEE  
           ??_Lcd_CGRAM_Close 0010                      ??_LowISR 0009                    ?_Lcd_Clear 0001  
                  ?_Lcd_Blink 0001                      ??_estado 000E               Lcd_Write_Char@a 0010  
             Lcd_Write_Char@y 000F                      ??_reposo 000D                   __pbssCOMRAM 001E  
                  ?_Modificar 0001                      ?_Lcd_Cmd 0001                   _EEPROM_Read 12D4  
            ??_Lcd_Set_Cursor 0011                     __pintcode 0008                   ??i1_Lcd_Cmd 0002  
        i1Lcd_Set_Cursor@temp 0008                   __pintcodelo 0018                   __smallconst 0800  
                    ?_guardar 0001                      _LATCbits 0F8B                      _LATDbits 0F8C  
                    _LATEbits 0F8D          _Lcd_CGRAM_CreateChar 0828                      i1u102_20 0D00  
                    i1u110_20 007C                      i1u102_21 0CFC                      i1u110_21 0078  
                    i1u103_20 0D34                      i1u111_20 008C                      i1u103_21 0D30  
                    i1u111_21 0088                      i1u104_20 0D68                      i1u112_20 009C  
                    i1u104_21 0D64                      i1u112_21 0098                      i1u105_20 0D9C  
                    i1u113_20 00AC                      i1u105_21 0D98                      i1u113_21 00A8  
                    i1u114_20 00BC                      i1u106_20 0038                      i1u114_21 00B8  
                    i1u106_21 0034                      i1u107_20 004C                      i1u107_21 0048  
                    i1u108_20 005C                      i1u108_21 0058                      i1u109_20 006C  
                    i1u109_21 0068                      i1u135_27 1268                      Lcd_Cmd@a 000F  
                    _PIR2bits 0FA1                   ??_Lcd_Clear 0010                      _RCONbits 0FD0  
                 ??_Lcd_Blink 0004                    _ADCON1bits 0FC1            Actualizar_Matriz@i 0015  
            ??_Lcd_Write_Char 000E                      _Lcd_Init 0E4E                      _Lcd_Port 103A  
                 _INTCON2bits 0FF1                   ??_Modificar 0011      __end_of_Lcd_Write_String 118A  
       ?_Lcd_CGRAM_CreateChar 0011                    _EECON1bits 0FA6                      __Hrparam 0000  
                    __Lrparam 0000                  ??_init_ports 000D      __end_ofi1_Lcd_Set_Cursor 0DC0  
           i1Lcd_Set_Cursor@a 0005             i1Lcd_Set_Cursor@b 0004             i1Lcd_Set_Cursor@y 0007  
           i1Lcd_Set_Cursor@z 0006               _Lcd_CGRAM_Close 130E                      _detectar 0ED0  
                    __ptext10 10F2                      __ptext11 12E4                      __ptext20 0C1C  
                    __ptext12 1140                      __ptext21 1236                      __ptext13 0E4E  
                    __ptext22 103A                      __ptext14 12F2                      __ptext15 1300  
                    __ptext24 0CEE                      __ptext16 0828                      __ptext25 131C  
                    __ptext17 130E                      __ptext26 1256                      __ptext18 0B36  
                    __ptext27 1096                      __ptext19 11CC                      _figura_1 0809  
                    _figura_2 0801                 ?_EEPROM_Write 000D                      _init_int 12AE  
          __end_of_init_ports 1294                   i1Lcd_Port@a 0001                      isa$xinst 0000  
                    int$flags 002F                    _INTCONbits 0FF2                      guardar@i 000F  
              ??_EEPROM_Write 000E            Lcd_Write_Char@temp 000E                      intlevel1 0000  
                    intlevel2 0000        ??_Lcd_CGRAM_CreateChar 0012                _Lcd_CGRAM_Init 1300  
                ?_EEPROM_Read 0001                    i1Lcd_Cmd@a 0003            Lcd_Set_Cursor@temp 0014  
               ??_Lcd_NoBlink 0010       __end_of_Lcd_CGRAM_Close 131C                    i1_Lcd_Port 1096  
      __end_of_Lcd_CGRAM_Init 130E                EEPROM_Read@dir 000D  
